[{"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/index.js":"1","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/reportWebVitals.js":"2","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/App.js":"3","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/NotFound/PageNotFound.js":"4","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/LoginCyberBug/LoginCyberBugs.js":"5","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/CreateProject/CreateProject.js":"6","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/GlobalSetting/Loading.js":"7","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/ProjectManagement/ProjectManagement.js":"8","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/templates/HomeTemplate/UserLoginTemplate.js":"9","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/ProjectDetail/IndexCyberBugs.js":"10","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/templates/HomeTemplate/CyberbugsTemplate.js":"11","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/util/history/history.js":"12","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/HOC/CyberbugsHOC/DrawerCyberbugs.js":"13","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/SidebarCyberBugs.js":"14","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/Main/HeaderMain.js":"15","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/Main/InforMain.js":"16","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/MenuCyberBugs.js":"17","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/Main/ContentMain.js":"18","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/ModalCyberBugs/ModalCyberBugs.js":"19","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/constants/Cyberbugs/Cyberbugs.js":"20","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/DrawerCyberbugsReducer.js":"21","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/actions/CyberBugsAction.js":"22","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormEditProject/FormEditProject.js":"23","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectCategoryReducer.js":"24","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormCreateTask/FormCreateTask.js":"25","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/configStore.js":"26","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/LoadingReducer.js":"27","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/UserCyberBugsReducer.js":"28","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectCyberBugsReducer.js":"29","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/PriorityReducer.js":"30","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/TaskTypeReducer.js":"31","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectReducer.js":"32","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectEditReducer.js":"33","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/TaskReducer.js":"34","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/StatusReducer.js":"35","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/rootSaga.js":"36","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/util/constants/settingSystem.js":"37","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/ProjectSaga.js":"38","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/ProjectCategorySaga.js":"39","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/TaskTypeSaga.js":"40","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/PrioritySaga.js":"41","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/TaskSaga.js":"42","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/StatusSaga.js":"43","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/UserCyberBugsSaga.js":"44","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/util/Notification/notificationCyberbugs.js":"45","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/CyberbugsService.js":"46","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/PriorityService.js":"47","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/BaseService.js":"48","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/ProjectService.js":"49","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/TaskService.js":"50","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/StatusService.js":"51","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/TaskTypeService.js":"52","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/UserService.js":"53","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/constants/Loading/LoadingConst.js":"54","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/serviceWorker.js":"55","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/CommentSaga.js":"56","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/CommentService.js":"57","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/CommentReducer.js":"58","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/SignupCyberBug/SignupCyberBug.js":"59","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/SignUpSaga.js":"60","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/SignUpService.js":"61","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/UserManagement/UserManagement.js":"62","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormEditUser/FormEditUser.js":"63","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormCreateUser/FormCreateUser.js":"64"},{"size":608,"mtime":1611000108872,"results":"65","hashOfConfig":"66"},{"size":362,"mtime":1610992264386,"results":"67","hashOfConfig":"66"},{"size":1986,"mtime":1611396854385,"results":"68","hashOfConfig":"66"},{"size":177,"mtime":1610995854678,"results":"69","hashOfConfig":"66"},{"size":2416,"mtime":1611492856050,"results":"70","hashOfConfig":"66"},{"size":3832,"mtime":1610995831678,"results":"71","hashOfConfig":"66"},{"size":453,"mtime":1611092544875,"results":"72","hashOfConfig":"66"},{"size":7285,"mtime":1610995831690,"results":"73","hashOfConfig":"66"},{"size":1000,"mtime":1611310066537,"results":"74","hashOfConfig":"66"},{"size":1141,"mtime":1611252750473,"results":"75","hashOfConfig":"66"},{"size":972,"mtime":1610998567921,"results":"76","hashOfConfig":"66"},{"size":93,"mtime":1610997118377,"results":"77","hashOfConfig":"66"},{"size":1467,"mtime":1610995789053,"results":"78","hashOfConfig":"66"},{"size":1635,"mtime":1610995569476,"results":"79","hashOfConfig":"66"},{"size":715,"mtime":1610995569471,"results":"80","hashOfConfig":"66"},{"size":1200,"mtime":1610995569472,"results":"81","hashOfConfig":"66"},{"size":2360,"mtime":1611315673189,"results":"82","hashOfConfig":"66"},{"size":3562,"mtime":1611424083870,"results":"83","hashOfConfig":"66"},{"size":27907,"mtime":1611489130460,"results":"84","hashOfConfig":"66"},{"size":2197,"mtime":1610995955300,"results":"85","hashOfConfig":"66"},{"size":1729,"mtime":1611497136229,"results":"86","hashOfConfig":"66"},{"size":333,"mtime":1611046990182,"results":"87","hashOfConfig":"66"},{"size":4927,"mtime":1611401757609,"results":"88","hashOfConfig":"66"},{"size":506,"mtime":1610996232756,"results":"89","hashOfConfig":"66"},{"size":11275,"mtime":1611250740555,"results":"90","hashOfConfig":"66"},{"size":1427,"mtime":1611486201885,"results":"91","hashOfConfig":"66"},{"size":489,"mtime":1611000073503,"results":"92","hashOfConfig":"66"},{"size":1237,"mtime":1611496943626,"results":"93","hashOfConfig":"66"},{"size":607,"mtime":1610996232773,"results":"94","hashOfConfig":"66"},{"size":402,"mtime":1610996232741,"results":"95","hashOfConfig":"66"},{"size":386,"mtime":1610996232841,"results":"96","hashOfConfig":"66"},{"size":663,"mtime":1610996232804,"results":"97","hashOfConfig":"66"},{"size":567,"mtime":1610996232788,"results":"98","hashOfConfig":"66"},{"size":1505,"mtime":1611487019917,"results":"99","hashOfConfig":"66"},{"size":368,"mtime":1610996232819,"results":"100","hashOfConfig":"66"},{"size":1913,"mtime":1611403700370,"results":"101","hashOfConfig":"66"},{"size":284,"mtime":1610997118372,"results":"102","hashOfConfig":"66"},{"size":5356,"mtime":1611252485758,"results":"103","hashOfConfig":"66"},{"size":923,"mtime":1610999712951,"results":"104","hashOfConfig":"66"},{"size":936,"mtime":1610999920550,"results":"105","hashOfConfig":"66"},{"size":966,"mtime":1610999789433,"results":"106","hashOfConfig":"66"},{"size":5284,"mtime":1611424022113,"results":"107","hashOfConfig":"66"},{"size":923,"mtime":1610999879014,"results":"108","hashOfConfig":"66"},{"size":5869,"mtime":1611405765885,"results":"109","hashOfConfig":"66"},{"size":203,"mtime":1610997118349,"results":"110","hashOfConfig":"66"},{"size":1690,"mtime":1611000028953,"results":"111","hashOfConfig":"66"},{"size":240,"mtime":1610999767361,"results":"112","hashOfConfig":"66"},{"size":1285,"mtime":1611000044144,"results":"113","hashOfConfig":"66"},{"size":651,"mtime":1610996923748,"results":"114","hashOfConfig":"66"},{"size":578,"mtime":1610996923750,"results":"115","hashOfConfig":"66"},{"size":229,"mtime":1610996923749,"results":"116","hashOfConfig":"66"},{"size":236,"mtime":1611312864213,"results":"117","hashOfConfig":"66"},{"size":898,"mtime":1611405698697,"results":"118","hashOfConfig":"66"},{"size":96,"mtime":1610996023887,"results":"119","hashOfConfig":"66"},{"size":5086,"mtime":1611000161474,"results":"120","hashOfConfig":"66"},{"size":4352,"mtime":1611489817252,"results":"121","hashOfConfig":"66"},{"size":603,"mtime":1611489728642,"results":"122","hashOfConfig":"66"},{"size":1692,"mtime":1611492384669,"results":"123","hashOfConfig":"66"},{"size":2557,"mtime":1611497520104,"results":"124","hashOfConfig":"66"},{"size":1608,"mtime":1611497805360,"results":"125","hashOfConfig":"66"},{"size":242,"mtime":1611313742321,"results":"126","hashOfConfig":"66"},{"size":3989,"mtime":1611498456903,"results":"127","hashOfConfig":"66"},{"size":2720,"mtime":1611497068430,"results":"128","hashOfConfig":"66"},{"size":2514,"mtime":1611497643187,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"v4vuqx",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"132"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"132"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"132"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"132"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"132"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/index.js",[],["284","285"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/reportWebVitals.js",[],["286","287"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/App.js",["288"],"import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch,Router } from 'react-router-dom';\nimport PageNotFound from './pages/NotFound/PageNotFound'; \nimport Loading from './components/GlobalSetting/Loading';  \nimport UserLoginTemplate from './templates/HomeTemplate/UserLoginTemplate'; \nimport LoginCyberBugs from './pages/CyberBugs/LoginCyberBug/LoginCyberBugs';\nimport {history} from './util/history/history'; \nimport CyberbugsTemplate from './templates/HomeTemplate/CyberbugsTemplate';\nimport CreateProject from './pages/CyberBugs/CreateProject/CreateProject';\nimport ProjectManagement from './pages/CyberBugs/ProjectManagement/ProjectManagement';\nimport DrawerCyberbugs from './HOC/CyberbugsHOC/DrawerCyberbugs';\nimport IndexCyberBugs from './pages/CyberBugs/ProjectDetail/IndexCyberBugs';\nimport './index.css'; \nimport SignupCyberBug from './pages/CyberBugs/SignupCyberBug/SignupCyberBug';\nimport UserManagement from './pages/CyberBugs/UserManagement/UserManagement';\nexport default class App extends Component {\n  render() {\n    return (\n      <Router history = {history}>\n<DrawerCyberbugs/>\n      {/* <Modal/> */}\n      <Loading/>\n      <Switch>    \n        \n        <UserLoginTemplate exact path=\"/login\"  Component={LoginCyberBugs} />\n        <UserLoginTemplate exact path=\"/signup\"  Component={SignupCyberBug} />\n        <CyberbugsTemplate exact path = \"/cyberbugs\" Component = {ProjectManagement}/>\n        <CyberbugsTemplate exact path = \"/createproject\" Component = {CreateProject}/>\n        <CyberbugsTemplate exact path = \"/projectmanagement\" Component = {ProjectManagement}/>\n        <CyberbugsTemplate exact path = \"/projectdetail/:projectId\" Component = {IndexCyberBugs}/>\n        <CyberbugsTemplate exact path = \"/admin/usermanagement\" Component = {UserManagement}/>\n        <UserLoginTemplate exact path=\"/\"  Component={LoginCyberBugs} />\n        <Route  path=\"*\"  Component={PageNotFound} />      \n      </Switch>\n\n      </Router>\n    )\n  }\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/NotFound/PageNotFound.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/LoginCyberBug/LoginCyberBugs.js",["289","290","291","292","293","294"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/CreateProject/CreateProject.js",["295","296","297","298","299","300","301"],"import React, {useEffect} from 'react'; \nimport { Editor } from '@tinymce/tinymce-react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup'; \nimport {connect, useSelector, useDispatch} from 'react-redux'; \nimport { CREATE_PROJECT_SAGA, GET_ALL_PROJECT_CATEGORY_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\n function CreateProject(props) {\n   const   {arrayProjectCategory} = useSelector(state => state.ProjectCategoryReducer); \n    const dispatch = useDispatch(); \n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue\n      } = props\n\n      useEffect(()=>{\n        dispatch({\n            type: GET_ALL_PROJECT_CATEGORY_SAGA\n        })\n      }, [])\n\n   const handleEditorChange = (content, editor) => {\n    setFieldValue(\"description\", content)\n      }\n    \n    return (\n        <div className=\"container m-5\">\n            <h3 className=\"text-center\"> Create Project</h3>\n            <form className=\"container\" onSubmit = {handleSubmit}>\n                <div className=\"form-group\">\n                    <p>Name</p>\n                    <input type=\"text\" \n                    className=\"form-control\" \n                    name=\"projectName\"\n                    onChange = {handleChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <p>Description</p>\n                    <Editor\n            onEditorChange = {handleEditorChange}\n         name=\"description\"\n         init={{\n           height: 500,\n           menubar: false,\n           plugins: [\n             'advlist autolink lists link image charmap print preview anchor',\n             'searchreplace visualblocks code fullscreen',\n             'insertdatetime media table paste code help wordcount'\n           ],\n           toolbar:\n             'undo redo | formatselect | bold italic backcolor | \\ alignleft aligncenter alignright alignjustify | \\  bullist numlist outdent indent | removeformat | help'\n         }}\n       />\n                </div>\n                <div className=\"form-group\">\n                    <select name=\"categoryId\"  className=\"form-control\"  onChange = {handleChange}>\n                        {/* <option value=\"software\" className=\"software\">Software</option>\n                        <option value=\"web\" className=\"web\">Web</option>\n                        <option value=\"app\" className=\"app\">App</option> */}\n                        {arrayProjectCategory.map((item, index)=>{\n                            return  <option value={item.id} key={index}>{item.projectCategoryName}</option>\n                        })}\n                    </select>\n                </div>\n               \n                <div className=\"text-center\">\n                <button type=\"submit\" className=\"btn btn-primary\">Create Project</button>\n                </div>\n\n            </form>\n        </div>\n    )\n}\nconst createProjectForm = withFormik({\n    enableReinitialize: true,//props thay đổi, thuộc tính tự động thay đổi và binding\n    mapPropsToValues: (props) => {     \n         return { projectName: \"\", description: \"\",  categoryId: props.arrayProjectCategory[0]?.id\n        }},\n   \n    validationSchema: Yup.object().shape({\n       \n    }), \n    handleChange: e => {\n        console.log(e.values);\n    }, \n    handleSubmit: (values, {props,  setSubmitting }) => {       \n\n        props.dispatch({\n            type: CREATE_PROJECT_SAGA, \n            newProject: values\n        })\n    },\n  \n    displayName: 'Create Project Formik',\n  })(CreateProject); \n  const mapStateToProps = (state) => {\n      return {\n          arrayProjectCategory: state.ProjectCategoryReducer.arrayProjectCategory\n      }\n  }\n  export default connect(mapStateToProps) (createProjectForm); \n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/GlobalSetting/Loading.js",["302"],"import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux'; \nimport './Loading.css';\n\nexport default function Loading() {\n    const isLoading =  useSelector(state => state.LoadingReducer.isLoading); \n    if(isLoading){\n        return (\n            <div className=\"loading\">\n                <img src={require(\"./../../assets/img/loading2.gif\")} alt=\"loading\"/>\n            </div>\n        )\n    } else {\n        return \"\"\n    }\n   \n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/ProjectManagement/ProjectManagement.js",["303","304","305","306","307","308"],"import React, {useEffect, useState} from 'react'; \nimport { Table, Button, Space, Tag, Popconfirm, Popover, AutoComplete } from 'antd';\nimport { Avatar, Image } from 'antd';\nimport ReactHtmlParser from 'react-html-parser';\nimport { DeleteOutlined, EditOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormEditProject from '../../../components/Form/FormEditProject/FormEditProject';\nimport { NavLink } from 'react-router-dom'; \nimport { ADD_USER_PROJECT_API, DELETE_PROJECT_SAGA, DELETE_USER_PROJECT_API, EDIT_PROJECT_SAGA_DRAWER, GET_LIST_PROJECT_SAGA, GET_USER_API, OPEN_FORM_EDIT_PROJECT } from '../../../redux/constants/Cyberbugs/Cyberbugs';\nexport default function ProjectManagement(props) {\n    const dispatch = useDispatch(); \n    \n    //lấy dữ liệu từ reducer về component \n    const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList); \n    const userSearch = useSelector(state => state.UserLoginCyberBugsReducer.userSearch); \n    const [value, setValue] = useState(\"\");\n    const [state, setState] = useState({\n        filteredInfo: null,\n        sortedInfo: null,\n    });\n    useEffect(()=>{\n        dispatch({\n            type: GET_LIST_PROJECT_SAGA\n        })\n    }, [])\n   const handleChange = (pagination, filters, sorter) => {\n    setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  const clearFilters = () => {\n    setState({ filteredInfo: null });\n  };\n\n  const clearAll = () => {\n    setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n  const setAgeSort = () => {\n    setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  };\n  let { sortedInfo, filteredInfo } = state;\n\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n      {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n        sorter: (item2, item1) => {\n            return item2.id - item1.id; \n        },\n        sortDirections: ['descend'], \n        ellipsis: true,\n      },\n      {\n        title: 'projectName',\n        dataIndex: 'projectName',\n        key: 'projectName',\n        render: (text, record, index)=>{\n            return <NavLink key = {index} to = {`/projectdetail/${record.id}`}>{text}</NavLink>\n        },\n        sorter: (item2, item1) => {\n           let projectName1 = item1.projectName?.trim().toLowerCase(); \n           let projectName2 = item2.projectName?.trim().toLowerCase(); \n           if(projectName2 < projectName1){\n               return -1 \n           } \n           return 1; \n        },\n        sortDirections: ['descend'], \n        ellipsis: true,\n      },\n     \n      {\n        title: 'creator',\n        key: 'creator',\n        render: (text, record, index) => {\n            return <Tag>{record.creator?.name}</Tag> \n        },\n        ellipsis: true,\n      },\n      {\n        title: 'members',\n        key: 'members',\n        render: (text, record, index) => {\n            return  <div>\n            {record.members?.slice(0,3).map((item, index)=>{\n                return (\n                  <Popover key={index} placement=\"top\" title=\"members\" content={()=>{\n                    return <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <td>Id</td>\n                          <td>Avatar</td>\n                          <td>Name</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {record.members?.map((item, index)=>{\n                          return <tr key={index}>\n                            <td>{item.userId}</td>\n                            <td> <img src={item.avatar} alt=\"avatar\" width=\"30\" height=\"30\" /> </td>\n                            <td>{item.userId}</td>\n                            <td> <button className=\"btn btn-danger\" style={{borderRadius: \"50%\"}} \n                            onClick={()=> {dispatch({\n                              type: DELETE_USER_PROJECT_API,\n                              userProject: {\n                                \"projectId\": record.id,\n                                \"userId\": item.userId\n                              }})}}> X </button> </td>\n                          </tr>\n                        })}\n                      </tbody>\n                      </table>\n\n                  }}>\n                   <Avatar src={item.avatar} key={index}/>\n                   </Popover>\n                )\n                })}\n               \n               {record.members?.length> 3?<Avatar>...</Avatar> : \"\"} \n              <Popover placement=\"topLeft\" title={\"Add user\"} content={()=>{return <div> <AutoComplete \n              style={{width: \"100%\"}}  \n              onSearch={(value)=>{dispatch({type: GET_USER_API, keyword: value})}}\n              options={userSearch?.map((user,index)=>{\n                return {label: user.name, value: user.userId.toString() }\n              })}\n              value={value}\n              onChange = {(value)=>{setValue(value)}}\n              onSelect={(valueSelect, option)=>{\n                setValue(option.label); \n                dispatch({\n                  type: ADD_USER_PROJECT_API, \n                  userProject: {\n                    \"projectId\": record.id,\n                    \"userId\": valueSelect\n                  }\n                })\n              }}\n              /></div>}} trigger=\"click\">\n              <Button>+</Button>\n            </Popover>\n            </div>\n        },\n        ellipsis: true,\n      },\n      {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action',\n        render: (text, record, index) => {\n          return <div>\n          <Space size=\"middle\">\n               <EditOutlined style={{ color: '#08c' }}\n               onClick = {()=>{\n                 const action= {\n                   type: OPEN_FORM_EDIT_PROJECT,\n                   title: \"Edit Project Form\", \n                   Component : <FormEditProject/>,                   \n                 }\n                 //dispatch lên reducer nội dung drawer \n                 dispatch(action); \n                 const actionEditProject = {\n                   type: EDIT_PROJECT_SAGA_DRAWER, \n                   projectEditModal: record \n                 }\n                 dispatch(actionEditProject)\n               }}\n                />\n                 <Popconfirm\n    title=\"Are you sure to delete this task?\"\n    onConfirm={()=>{dispatch({type: DELETE_PROJECT_SAGA, id: record.id})}} >\n   <DeleteOutlined style={{ color: '#eb2f96' }} />\n  </Popconfirm>,\n               \n            </Space>\n          </div>\n\n        },\n        ellipsis: true,\n      },\n    ]  \n    return (\n        <div className=\"container-fluid mt-5\">\n         <h3> Project Management</h3>\n        <Space style={{ marginBottom: 16 }}>\n          <Button onClick={setAgeSort}>Sort age</Button>\n          <Button onClick={clearFilters}>Clear filters</Button>\n          <Button onClick={clearAll}>Clear filters and sorters</Button>\n        </Space>\n        <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={handleChange} />\n      </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/templates/HomeTemplate/UserLoginTemplate.js",["309","310","311"],"import React, {useState, useEffect} from 'react';\nimport {Route} from 'react-router-dom';\nimport { Button, Layout } from 'antd';\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport default function UserLoginTemplate(propsRoute) {\n\n    const [{width,height }, setSize] = useState({width: window.innerWidth,height:window.innerHeight });\n    useEffect(()=>{\n        window.onresize = () =>{\n            setSize({\n                width: window.innerWidth, \n                height: window.innerHeight, \n            })\n        }\n    }, [])\n\n    let {Component, ...resRoute} = propsRoute; \n    return <Route {...resRoute} render = {(propsRoute) => {\n        return <>\n        <Layout>\n            <Sider width={width/2} style={{height:height,backgroundImage:'url(https://picsum.photos/2000)',backgroundSize:'100%'}}>\n                sider\n            </Sider>\n            <Content>\n            <Component {...propsRoute}/>\n            </Content>\n        </Layout>\n           \n        </>\n    }} />\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/ProjectDetail/IndexCyberBugs.js",["312","313"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContentMain from '../../../components/CyberBugs/Main/ContentMain';\nimport HeaderMain from '../../../components/CyberBugs/Main/HeaderMain';\nimport InforMain from '../../../components/CyberBugs/Main/InforMain';\nimport { GET_PROJECT_DETAIL_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\nimport './../../../index.css';\n\nexport default function IndexCyberBugs(props) {\n    let {projectDetail} = useSelector(state => state.ProjectReducer); \n    const dispatch = useDispatch(); \n    useEffect(() => {\n        const projectId = props.match.params.projectId;\n        dispatch({\n            type: GET_PROJECT_DETAIL_SAGA, \n            id : projectId\n        })\n    }, [])\n    return (\n        <div className=\"main\">\n           <HeaderMain/>\n           <InforMain members = {projectDetail.members} \n                    projectName = {projectDetail.alias}\n                    description  = {projectDetail.description}\n                    />\n            <ContentMain projectDetail = {projectDetail}/>\n\n        </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/templates/HomeTemplate/CyberbugsTemplate.js",["314","315","316"],"import React, {Fragment} from 'react'; \nimport {Route} from 'react-router-dom'; \nimport SidebarCyberBugs from '../../components/CyberBugs/SidebarCyberBugs';\nimport MenuCyberBugs from '../../components/CyberBugs/MenuCyberBugs';\n\nimport '../../index.css'; \nimport HeaderMain from '../../components/CyberBugs/Main/HeaderMain';\nimport ContentMain from '../../components/CyberBugs/Main/ContentMain';\nimport InforMain from '../../components/CyberBugs/Main/InforMain';\nimport ModalCyberBugs from '../../components/CyberBugs/ModalCyberBugs/ModalCyberBugs';\nexport default function CyberbugsTemplate(props) {\n    const {Component, ...restParam} = props; \n    return <Route {...restParam} render = {(propsRoute)=>{\n        return <>\n        <div className=\"jira\">\n        <SidebarCyberBugs/>\n        <MenuCyberBugs/>          \n        <Component {...propsRoute}/>      \n        </div>\n       <ModalCyberBugs/>\n            {/* <Component {...propsRoute}/> */}\n        </>\n    }}/>\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/util/history/history.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/HOC/CyberbugsHOC/DrawerCyberbugs.js",["317","318","319","320","321","322","323","324","325"],"import React, { useState } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport DrawerCyberbugsReducer from '../../redux/reducers/DrawerCyberbugsReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CLOSE_DRAWER, OPEN_DRAWER } from '../../redux/constants/Cyberbugs/Cyberbugs';\n\n\nconst DrawerCyberbugs = (props) => {\n  // let  [state, setState] = useState({\n  //   visible: true,\n  // });\n  const dispatch =  useDispatch(); \n\n  const {visible, ComponentDrawerContent, callBackSubmit, title} = useSelector(state => state.DrawerCyberbugsReducer); \n  const showDrawer = () => {\n    dispatch({\n      type: OPEN_DRAWER, \n    })\n  };\n \n  const  onClose = () => {\n    dispatch({\n      type: CLOSE_DRAWER\n    })\n  };\n\n    return (\n        <>    \n        <Drawer\n          title={title}\n          width={720}\n          onClose={onClose}\n          visible = {visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button onClick={callBackSubmit} type=\"primary\">\n                Submit\n              </Button>\n            </div>\n          }\n        >\n    {ComponentDrawerContent}\n        </Drawer>\n      </>\n    );\n  }\n\n\n\nexport default DrawerCyberbugs;\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/SidebarCyberBugs.js",["326","327","328","329","330","331","332","333"],"import React, { useState }  from 'react';\nimport { Form, Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n    BarsOutlined,\n    SearchOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport FormCreateTask from '../Form/FormCreateTask/FormCreateTask';\n\nconst { Header, Sider, Content } = Layout;\n\nexport default function SidebarCyberBugs() {\n    const dispatch = useDispatch(); \n  const [state, setState] = useState({\n    collapsed: false,\n})\nconst toggle = () => {\n    setState({\n        collapsed: !state.collapsed,\n    });\n};\nreturn (\n    <div>\n\n        <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\n            <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\n\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick = {()=>{\n                    dispatch({\n                        type: \"OPEN_FORM_CREATE_TASK\", \n                        Component : <FormCreateTask/>,\n                        title: \"Create Task\"\n                    })\n                }} >\n                    <span className=\"mb-2\">Create issue</span>\n                </Menu.Item>\n                <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\n                    Search\n                 </Menu.Item>\n\n            </Menu>\n        </Sider>\n    </div>\n\n\n)\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/Main/HeaderMain.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/Main/InforMain.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/MenuCyberBugs.js",["334","335","336"],"import React from 'react';\nimport { NavLink, Route, Switch,Router } from 'react-router-dom';\nconst MenuCyberBugs = () => {\n    return (\n        <>\n            <div className=\"menu\">\n                <div className=\"account\">\n                    <div className=\"avatar\">\n                        <img src={require(\"../../assets/img/download (1).jfif\")} alt=\"hinh anh\" />\n                    </div>\n                    <div className=\"account-info\">\n                        <p>CyberLearn.vn</p>\n                        <p>Report bugs</p>\n                    </div>\n                </div>\n                <div className=\"control\">\n                    <div>\n                        <i className=\"fa fa-credit-card mr-3\" />\n                        <NavLink to=\"/cyberbugs\">Cyber Board</NavLink>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-cog mr-3\" />\n                        <NavLink to=\"/createproject\">Create project</NavLink>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-cog mr-3\" />\n                        <NavLink to=\"/projectmanagement\">Project Management</NavLink>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-cog mr-3\" />\n                        <NavLink to=\"/admin/usermanagement\">User Management</NavLink>\n                    </div>\n                </div>\n                <div className=\"feature\">\n                    <div>\n                        <i className=\"fa fa-truck mr-3\" />\n                        <span>Releases</span>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-equals mr-3\" />\n                        <span>Issues and filters</span>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-paste mr-3\" />\n                        <span>Pages</span>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-location-arrow mr-3\" />\n                        <span>Reports</span>\n                    </div>\n                    <div>\n                        <i className=\"fa fa-box mr-3\" />\n                        <span>Components</span>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MenuCyberBugs;\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/Main/ContentMain.js",["337"],"import React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function ContentMain(props) {\n    const dispatch = useDispatch(); \n    \n    let {lstTask} = props.projectDetail; \n\n    const handleDragEnd = (result) => {\n        let {id, taskId} = JSON.parse(result.draggableId);\n        console.log(id, taskId ) \n        let {source, destination} = result; \n        if(!result.destination) {\n            return;\n        }\n        if(source.index === destination.index && source.droppableId === destination.droppableId){\n            return; \n        }\n       \n        //gọi api cập nhật lại status'\n        dispatch({\n            type: \"UPDATE_TASK_STATUS_SAGA\", \n            taskStatusUpdate: {\n                taskId : taskId, \n                statusId: destination.droppableId, \n                id: id\n\n            }\n        })\n    }\n   const renderListTask = () => {\n       return <DragDropContext onDragEnd = {handleDragEnd} >\n       {\n     lstTask?.map((item, index) => {\n       return <Droppable key={index} droppableId={item.statusId}> \n       {(provided) => {\n           return  <div \n          \n           className=\"card\" key = {index} style={{ width: '17rem', height: '25rem' }}>\n       <div className=\"card-header\">\n         {item.statusName}\n</div>\n       <div className=\"list-group list-group-flush\"\n        ref={provided.innerRef}\n         {...provided.droppableProps}\n         key={index}\n         style={{height: \"100%\", width: \"100%\"}}\n         >\n       {item.lstTaskDeTail?.map((task, index) => {\n           return <Draggable key = {task.taskId.toString()} index={index} draggableId={JSON.stringify({\n               id: task.projectId,\n               taskId : task.taskId\n           })} >\n                    {(provided) => {\n                        return <div\n                        ref = {provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        key = {index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick = {()=>{\n              dispatch({\n                  type : \"GET_TASK_DETAIL_SAGA\", \n                  taskId : task.taskId\n              })\n           }}>\n               <p className=\"font-weight-bold\"> {task.taskName} </p>\n               <div className=\"block\" style={{ display: 'flex' }}>\n                   <div className=\"block-left\">\n                       <p className=\"text-danger\">{task.priorityTask.priority}</p>\n                   </div>\n                   <div className=\"block-right\">\n                       <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                       {task.assigness?.map((mem, index) => {\n                           return  <div className=\"avatar\" key = {index}>\n                               <img src={mem.avatar} alt={mem.avatar} />\n                           </div>\n                       })}\n                          \n                       </div>\n                   </div>\n               </div>\n           </div>\n                    }}\n           </Draggable>\n       })}         \n       </div>\n       {provided.placeholder}\n   </div>\n       }}\n      \n   </Droppable>\n   })}\n   </DragDropContext>\n   }\n    \n    return (\n       <>\n           <div className=\"content\" style={{ display: 'flex' }}>\n                   \n                          {renderListTask()}\n                     \n                    </div>\n       </>\n    )\n\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/CyberBugs/ModalCyberBugs/ModalCyberBugs.js",["338","339","340","341","342","343"],"import React, { useEffect, useState } from 'react'; \nimport { useDispatch, useSelector } from 'react-redux';\nimport { CHANGE_ASSINGEES, CHANGE_TASK_MODAL, GET_ALL_PRIORITY_LIST_SAGA, GET_ALL_STATUS_SAGA, GET_ALL_TYPE_TASK_SAGA, HANDLE_CHANGE_POST_API, REMOVE_USER_ASSIGN } from '../../../redux/constants/Cyberbugs/Cyberbugs';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Editor } from '@tinymce/tinymce-react'; \nimport { Select } from 'antd';\n\nexport default function ModalCyberBugs() {\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\n    const { arrStatus } = useSelector(state => state.StatusReducer);\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\n    const {projectDetail} = useSelector(state => state.ProjectReducer); \n    const {arrComment} = useSelector(state => state.CommentReducer) \n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\n    const [content, setContent] = useState(taskDetailModal.description);\n    const [comment, setComment] = useState('');\n    const [visibleEditor, setVisibleEditor] = useState(false); \n    // const [visibleCommentEdit, setVisibleCommentEdit] = useState(openEditor); \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: GET_ALL_STATUS_SAGA });\n        dispatch({ type: GET_ALL_PRIORITY_LIST_SAGA });\n        dispatch({ type: GET_ALL_TYPE_TASK_SAGA}); \n        dispatch({\n            type: \"GET_ALL_COMMENTS_SAGA\", \n            taskId: taskDetailModal.taskId\n        })\n    }, [taskDetailModal.taskId])\n\n    // console.log('taskDetailModal', taskDetailModal);\n\n    const renderDescription = () => {\n        const jsxDescription = ReactHtmlParser(taskDetailModal.description);\n        return <div> \n        {visibleEditor ? <div>\n            <Editor\n                    name=\"description\"\n            \n                    initialValue = {taskDetailModal.description}\n                    init={{\n                        selector: 'textarea#myTextArea',\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={(content, editor) => {\n                            setContent(content)\n                        }}\n                />\n                <button className=\"btn btn-primary\" onClick = {()=>{\n                    dispatch({\n                        type: HANDLE_CHANGE_POST_API, \n                        actionType : CHANGE_TASK_MODAL, \n                        name : \"description\", \n                        value : content\n                    })\n                    //  dispatch({\n                    //     type : CHANGE_TASK_MODAL, \n                    //     name : \"description\", \n                    //     value : content\n                    // })\n                    setVisibleEditor(false)\n                }}\n                >Save</button>\n                <button className=\"btn btn-success\" onClick = {()=>{\n                    // setHistoryContent(historyContent)\n                    dispatch({\n                        type:HANDLE_CHANGE_POST_API,\n                        actionType:CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: historyContent\n                    })\n                    setVisibleEditor(false)\n              \n                }}>Close</button>\n        </div> \n        :  <div onClick={()=> {\n            setHistoryContent(taskDetailModal.description)\n            setVisibleEditor(!visibleEditor)}}\n            >{jsxDescription}</div>  }\n        </div>;\n    }\n    const handleChange = (e) => {\n        const {name, value} = e.target; \n        dispatch({\n            type: HANDLE_CHANGE_POST_API, \n            actionType:CHANGE_TASK_MODAL,\n            name, \n            value\n        })\n        // dispatch({\n        //     type : CHANGE_TASK_MODAL,\n        //     name, \n        //     value\n        // })\n    }\n\n    const renderTimeTracking = () => {\n\n        const {timeTrackingSpent,timeTrackingRemaining} = taskDetailModal;\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\n        const percent = Math.round( Number(timeTrackingSpent)/max * 100 );\n\n        return <div>\n        <div style={{ display: 'flex' }}>\n            <i className=\"fa fa-clock\" />\n            <div style={{ width: '100%' }}>\n\n                <div className=\"progress\">\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\n                    <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\n                </div>\n            </div>\n            </div>\n            <div style={{ width: '100%' }}>\n\n<div className=\"row\"> \n<div className=\"col-6\">\n<input type=\"text\" className=\"form-control\" name =\"timeTrackingSpent\" onChange = {handleChange}/>\n</div>\n<div className=\"col-6\">\n  <input type=\"text\" className=\"form-control\" name =\"timeTrackingRemaining\" onChange = {handleChange}/>\n</div>\n</div>\n        </div>\n        </div>\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n    }\n    return (\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-info\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <div className=\"task-title\">\n                                <i className=\"fa fa-bookmark\" />\n                                <select name=\"typeId\" value = {taskDetailModal.typeId} onChange={handleChange}>\n                                    {arrTaskType?.map((type, index) => {\n                                        return <option key={index} value = {type.id}> {type.taskType}</option>\n                                    })} \n                                </select>\n                                <span>{taskDetailModal.taskName}</span>\n                            </div>\n                            <div style={{ display: 'flex' }} className=\"task-click\">\n                                <div>\n                                    <i className=\"fab fa-telegram-plane\" />\n                                    <span style={{ paddingRight: 20 }}>Give feedback</span>\n                                </div>\n                                <div>\n                                    <i className=\"fa fa-link\" />\n                                    <span style={{ paddingRight: 20 }}>Copy link</span>\n                                </div>\n                                <i className=\"fa fa-trash-alt\" style={{ cursor: 'pointer' }} />\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">×</span>\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-8\">\n                                        <p className=\"issue\">This is an issue of type: Task.</p>\n                                        <div className=\"description\">\n                                            <p>Description</p>\n                                            {renderDescription()}\n                                        </div>\n                                        <div style={{ fontWeight: 500, marginBottom: 10 }}>\n                                            Jira Software (software projects) issue types:\n              </div>\n                                        <div className=\"title\">\n                                            <div className=\"title-item\">\n                                                <h3>BUG <i className=\"fa fa-bug\" /></h3>\n                                                <p>\n                                                    A bug is a problem which impairs or prevents the\n                                                    function of a product.\n                  </p>\n                                            </div>\n                                            <div className=\"title-item\">\n                                                <h3>STORY <i className=\"fa fa-book-reader\" /></h3>\n                                                <p>\n                                                    A user story is the smallest unit of work that needs to\n                                                    be done.\n                  </p>\n                                            </div>\n                                            <div className=\"title-item\">\n                                                <h3>TASK <i className=\"fa fa-tasks\" /></h3>\n                                                <p>A task represents work that needs to be done</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"comment\">\n                                            <h6>Comment</h6>\n                                            <div className=\"block-comment\" style={{ display: 'flex' }}>\n                                                <div className=\"avatar\">\n                                                    <img src={require(\"../../../assets/img/download (1).jfif\")} alt=\"hinhAnh\" />\n                                                </div>\n                                <form className=\"input-comment\" onSubmit = {handleSubmit}>\n                             <Editor\n                    name=\"comment\"\n                    initialValue ='Add a comment'\n                    init={{\n                        selector: 'textarea#myTextArea',\n                        height: 150,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={(content, editor) => {\n                            // const jsxContent = ReactHtmlParser(content);\n                            \n                            setComment(content); \n            \n                        }}\n                />\n                <div className=\"btn-comment-group mt-2\">\n                <button className=\"btn btn-primary\" type=\"submit\" onClick={()=>{\n                             dispatch({\n                                type: \"INSERT_A_COMMENT_SAGA\",\n                                comment : {\n                                    \"taskId\": taskDetailModal.taskId,\n                                    \"contentComment\": comment,\n                                    \"projectId\" :taskDetailModal.projectId\n                                }\n\n                            })\n                        \n                }}>Save</button>\n                <button className=\"btn btn-default ml-3\" type=\"button\" onClick={()=>{\n                    setComment('')\n                }}>Cancel</button>\n                </div>    \n                                                </form>\n                                            </div>\n                                            <div className=\"lastest-comment\">\n                                                <div className=\"comment-item\">\n                                                    <div className=\"display-comment\">\n                                                            {arrComment?.map((item, index) => {\n                                                           \n                                                              \n                                                                return <div key={index} className=\"row my-3\">\n                                                                <div className=\"col-1\">\n                                                                <div className=\"avatar\">\n                                                                         <img src={item.user?.avatar} alt=\"hinhAnh\"/>       \n                                                                </div>\n                                                                </div>\n                                                                <div className = \"col-8\">\n                                                                <p style={{ marginBottom: 5 }}>\n                                                                        {item.user?.name}\n                                                                    </p>\n                         {item?.openEditor ?  <div>\n                     <Editor\n                    name=\"commentEdit\"\n                    initialValue ={item.contentComment}\n                    init={{\n                        // selector: `comment-${item.id}`,\n                        height: 150,\n                        menubar: false,\n                        hidden_input: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        \n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help',\n                        \n                        }}\n                        onEditorChange={(content, editor) => {\n                            // const jsxContent = ReactHtmlParser(content);\n                            setComment(content); \n                        }} />\n                        <div className=\"btn-edit-comment\">\n                            <button className = \"button\" onClick = {() => {\n                                dispatch({\n                                    type: \"EDIT_A_COMMENT_SAGA\", \n                                    id : item.id, \n                                    contentComment: comment, \n                                    projectId: taskDetailModal.projectId, \n                                    taskId: taskDetailModal.taskId\n                                })\n                            }}>Save Comment</button>\n                            <button className = \"button\" onClick={()=>{            \n                   dispatch({\n                       type: \"CANCEL_EDIT_COMMENT\",\n                       idComment: item.id\n                   })\n               }}>Cancel Comment</button>\n                        </div>\n                 </div>: <div> {ReactHtmlParser(item?.contentComment)}\n                 <span style={{ color: '#444422' }} onClick={()=>{\n                   \n                                                                    dispatch({\n                                                                        type: \"OPEN_EDIT_COMMENT\",\n                                                                        id: item.id\n                                                                    })\n                                                                }} >Edit</span>                       \n                                                                <span style={{ color: '#929398' }} className=\"ml-3\"\n                                                               onClick = {()=>{\n                                                                   dispatch({\n                                                                       type: \"DELETE_A_COMMENT_SAGA\", \n                                                                       id: item.id, \n                                                                       taskId : taskDetailModal?.taskId,\n                                                                       projectId: taskDetailModal?.projectId\n                                                                   })\n                                                               }}\n                                                                >Delete</span>\n                 </div>}\n                                                               \n                                                               \n                                                            </div>\n                                                            </div> \n                                                            })}\n                                                       \n                                                           \n                                                       \n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-4\">\n                                        <div className=\"status\">\n                                            <h6>STATUS</h6>\n                                            <select name = \"statusId\" className=\"custom-select\" onChange = {(e)=>{      \n                                                handleChange(e)                                      \n                                                // dispatch({\n                                                //     type: \"UPDATE_TASK_STATUS_SAGA\", \n                                                //     taskStatusUpdate : {\n                                                //         taskId : taskDetailModal.taskId, \n                                                //         statusId : e.target.value,\n                                                //         id :  taskDetailModal.projectId //projectId\n                                                //     }\n                                                // })                     \n                                            }}>\n                                            {arrStatus.map((status, index) => {\n                    return <option value={status.statusId} key={index}>{status.statusName}</option>})}\n                                            </select>\n                                        </div>\n                                        <div className=\"assignees\">\n                                            <h6>ASSIGNEES</h6>\n                                            <div>\n                                            {\n                                                taskDetailModal.assigness?.map((user, index) => {\n                                                    return <div key={index} style={{ display: 'flex' }} className=\"item\">\n                                                        <div className=\"avatar\">\n                                                            <img src={user.avatar} alt={user.avatar} />\n                                                        </div>\n                                                        <p className=\"name mt-1 ml-1\">\n                                                            {user.name}\n                                                            <i className=\"fa fa-times\" style={{ marginLeft: 5, cursor: \"pointer\" }}\n                                                            onClick = {()=>{\n                                                                dispatch({\n                                                                    type: HANDLE_CHANGE_POST_API, \n                                                                    actionType: REMOVE_USER_ASSIGN, \n                                                                    userId : user.id \n                                                                })\n                                                                // dispatch({\n                                                                //     type : \"REMOVE_USER_ASSIGN\",\n                                                                //     userId : user.id\n                                                                // })\n                                                            }} />\n                                                        </p>\n                                                    </div>\n                                                })\n                                            }\n                                                <div className=\"col-12 mt-2 mb-2\">\n                                                 \n                                                    <Select name=\"lstUser\" className=\"form-control\"\n                                                    value = \"Add more\"\n                                                    options =  {projectDetail.members?.filter(mem => {\n                                                            let index = taskDetailModal.assigness?.findIndex(us => us.id == mem.userId); \n                                                            if(index !== -1) {\n                                                                return false; \n                                                            } \n                                                            return true\n                                                        })?.map((mem, index) => {\n                                                            return {value : mem.userId, label : mem.name}    \n                                                             })}\n                                                    optionFilterProp = \"label\"\n                                                    style = {{width: \"100%\"}}\n                                                    onSelect = {(value) => {\n                                                        if(value !== 0) {\n                                                           \n                                                        let userSelect = projectDetail.members.find(mem => mem.userId == value); \n                                                        userSelect = {...userSelect, id: userSelect.userId}\n                                                    \n                                                        //dispatchReducer\n                                                        dispatch({\n                                                            type: HANDLE_CHANGE_POST_API,\n                                                            actionType: CHANGE_ASSINGEES,\n                                                            userSelect\n                                                        })\n                                                        // dispatch({\n                                                        //     type: CHANGE_ASSINGEES,\n                                                        //     userSelect\n                                                        // }) \n                                                        } else {\n                                                            return;  \n                                                        }\n                                                        \n                                                    }} >\n                                                   \n                                                    </Select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"reporter\">\n                                            <h6>REPORTER</h6>\n                                            <div style={{ display: 'flex' }} className=\"item\">\n                                                <div className=\"avatar\">\n                                                    <img src={require(\"../../../assets/img/download (1).jfif\")} alt=\"hinhAnh\" />\n                                                </div>\n                                                <p className=\"name\">\n                                                    Pickle Rick\n                    <i className=\"fa fa-times\" style={{ marginLeft: 5 }} />\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"priority\" name = \"priorityId\" style={{ marginBottom: 20 }}>\n                                            <h6>PRIORITY</h6>\n                                            <select name=\"priorityId\" className=\"form-control\" value={taskDetailModal.priorityId} onChange={(e) => {\n                                            handleChange(e);\n                                        }}>\n                                            {arrPriority.map((item, index) => {\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\n                                            })}\n                                            </select>\n                                        </div>\n                                        <div className=\"estimate\">\n                                            <h6>ORIGINAL ESTIMATE (HOURS)</h6>\n                                            <input type=\"text\" name = \"originalEstimate\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate}\n                                        onChange = {handleChange} />\n                                        </div>\n                                        <div className=\"time-tracking\">\n                                            <h6>TIME TRACKING</h6>\n                                            {\n                                            renderTimeTracking()\n                                        }\n                                        </div>\n                                        <div style={{ color: '#929398' }}>Create at a month ago</div>\n                                        <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/constants/Cyberbugs/Cyberbugs.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/DrawerCyberbugsReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/actions/CyberBugsAction.js",["344"],"import axios from 'axios';\nimport { USER_SIGNIN_API } from '../constants/Cyberbugs/Cyberbugs';\n\nexport const siginCyberbugsAction = (email, password, history) => {\n    return {\n        type: USER_SIGNIN_API,\n        userLogin: {\n            email:email,\n            password: password,\n            history: history\n        }\n    }\n}\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormEditProject/FormEditProject.js",["345","346","347","348","349","350","351"],"import React, { useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport ProjectCategoryReducer from '../../../redux/reducers/ProjectCategoryReducer';\nimport { GET_ALL_PROJECT_CATEGORY_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\n\n\n function FormEditProject(props) {\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    const dispatch = useDispatch();\n\n    \n    //componentdidmount\n    useEffect(() => {\n        dispatch({\n            type: GET_ALL_PROJECT_CATEGORY_SAGA\n        })\n        dispatch({ type: 'SET_SUBMIT_EDIT_PROJECT', submitFunction: handleSubmit });\n    }, [])\n\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n    const   {arrayProjectCategory} = useSelector(state => state.ProjectCategoryReducer); \n\n    return (\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project id</p>\n                        <input disabled  className=\"form-control\" name=\"id\" />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project name</p>\n                        <input className=\"form-control\"                        \n                        onChange={handleChange}\n                         value={values.projectName} \n                         name=\"projectName\" />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project Category</p>\n                        <select className=\"form-control\" \n                        value={values.categoryId} onChange={handleChange}\n                        name=\"categoryId\"\n                        >\n                            {arrayProjectCategory.map((item, index)=>{\n                                return <option key={index} value={item.id}>{item.projectCategoryName}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Description</p>\n                        <Editor\n                            value={values.description}\n                            initialValue = {values.description}\n                            name=\"description\"\n                            init={{\n                                selector: 'textarea#myTextArea',\n\n                                height: 500,\n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    'undo redo | formatselect | bold italic backcolor | \\\n        alignleft aligncenter alignright alignjustify | \\\n        bullist numlist outdent indent | removeformat | help'\n                            }}\n                            onEditorChange={handleEditorChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\nconst editProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const {projectEdit} = props; \n        return {\n            id: projectEdit?.id,\n            projectName:projectEdit.projectName ,\n            categoryId: projectEdit?.categoryId, \n            description: projectEdit.description\n\n        }\n    },\n    validationSchema: Yup.object().shape({\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n        props.dispatch({ \n            type: 'EDIT_PROJECT_SAGA',\n            newProject: values \n        })\n        const action = {\n            type: \"UPDATE_PROJECT_SAGA\", \n            projectUpdate : values\n        }\n        props.dispatch(action)\n    },\n})(FormEditProject);\n\nconst mapStateToProps = (state) => ({\nprojectEdit : state.ProjectEditReducer.projectEdit , \narrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\n\n})\nexport default connect(mapStateToProps)(editProjectForm);\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectCategoryReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormCreateTask/FormCreateTask.js",["352","353","354","355","356","357","358","359"],"import { Editor } from '@tinymce/tinymce-react'\nimport React, { useEffect, useState } from 'react'; \nimport { withFormik } from 'formik';\nimport * as Yup from 'yup'\nimport { connect, useSelector, useDispatch } from 'react-redux'; \nimport { Select, Radio,Slider } from 'antd';\n\nimport { GET_ALL_PRIORITY_LIST_SAGA, GET_ALL_PROJECT_SAGA, GET_ALL_STATUS_SAGA, GET_ALL_TYPE_TASK_SAGA, GET_USER_BY_PROJECT_ID_SAGA } from '../../../redux/constants/Cyberbugs/Cyberbugs';\n\nconst { Option } = Select;\n\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n function FormCreateTask(props) {\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    //Lấy dữ liệu từ redux \n     const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n     const {arrStatus} =useSelector(state => state.StatusReducer);\n     const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n     const {arrPriority} = useSelector(state => state.PriorityReducer);\n     const {arrUser} = useSelector(state => state.UserLoginCyberBugsReducer);\n     const userSearchOption = arrUser.map((user, index) => {\n         return {value : user.userId , label: user.name}\n     })\n\n     const dispatch = useDispatch();\n    const [size, setSize] = React.useState('default');\n\n    const [timeTracking,setTimetracking] = useState({\n        timeTrackingSpent:0,\n        timeTrackingRemaining:0\n    });\n    //hook\n    useEffect(() => {\n        dispatch({type:GET_ALL_PROJECT_SAGA});\n        dispatch({type:GET_ALL_TYPE_TASK_SAGA});\n         dispatch({type:GET_ALL_PRIORITY_LIST_SAGA});\n         dispatch({type: \"GET_USER_API\", keyword: ''})\n         dispatch({\n             type : \"SET_SUBMIT_CREATE_PROJECT\", \n             submitFunction : handleSubmit\n        })\n        dispatch({type: GET_ALL_STATUS_SAGA});\n        // dispatch({\n        //     type : GET_USER_BY_PROJECT_ID_SAGA\n        // })\n    },[])\n\n    const handleEditorChange = (content, editor) => {\n        setFieldValue(\"description\", content)\n    }\n\n   \n\n    const children = [];\n    return (\n        <div className=\"container\">          \n            <div className=\"form-group\" onSubmit = {handleSubmit}>\n                <p>Project</p>\n                <select name=\"projectId\" className=\"form-control\" onChange =  {(e)=>{\n                    let {value} = e.target;\n                    setFieldValue(\"projectId\", value); \n                    dispatch({\n                    type : GET_USER_BY_PROJECT_ID_SAGA,\n                    idProject: value\n                })\n                }} \n                value = {Number(values.projectId)} >\n                   {arrProject.map((project,index)=>{\n                       return <option key={index} value={Number(project.id)}>{project.projectName}</option>\n                   })}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <p>Task Name</p>\n                <input type=\"text\" name=\"taskName\" className=\"form-control\" value = {values.taskName}  onChange =  {handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <p>Status</p>\n                <select name=\"statusId\" className=\"form-control\" value = {values.statusId} onChange =  {handleChange} >\n                {arrStatus.map((status,index)=>{\n                       return <option key={index} value={Number(status.statusId)}>{status.statusName}</option>\n                   })}\n                </select>\n            </div> \n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <p>Priority</p>\n                        <select name=\"priorityId\" className=\"form-control\" \n                        onChange =  {handleChange}\n                        value = {values.priorityId}>\n                            {arrPriority.map((priority,index)=>{\n                                return <option key={index} value={priority.priorityId}>\n                                    {priority.priority}\n                                </option>\n                            })}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <p>Task type</p>\n                        <select className=\"form-control\" name=\"typeId\" \n                        onChange =  {handleChange}\n                        value = {values.typeId}>\n                            {arrTaskType.map((taskType,index)=>{\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                \n            </div>\n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                    <p>Assignees</p>\n                    <Select\n                            name = \"assignees\"\n                            \n                            mode=\"multiple\"\n                            size={size}\n                            options={userSearchOption}\n                            placeholder=\"Please select\"\n                            defaultValue={[]}\n                            onChange={(values) => {\n                                setFieldValue(\"listUserAsign\",values)\n                            }}\n                            onSearch = {(value) => {console.log(value)}}\n                            optionFilterProp=\"label\"\n                            onSelect = {(value) => {console.log(value)}}\n                            style={{ width: '100%' }}\n                        > {children}\n               \n                    </Select>\n                    <div className=\"row mt-3\">\n                        <div className=\"col-12\">\n                            <p>Original Estimate</p>\n                            <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange =  {handleChange}\n                                value = {values.originalEstimate}\n                            />\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"col-6\">\n                         <p>Time tracking</p>\n                        <Slider defaultValue={30} \n                        name = \"timeTracking\"\n                        value={timeTracking.timeTrackingSpent}\n                         max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)}\n                        />\n                        <div className=\"row\">\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\n                        </div>\n                        <div className=\"row\" style={{marginTop:5}}>\n                            <div className=\"col-6\">\n                                <p>Time spent</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" \n                                className=\"form-control\" name=\"timeTrackingSpent\" \n                                value = {values.timeTrackingSpent}\n                                onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingSpent:e.target.value\n                                    })\n                                setFieldValue(\"timeTrackingSpent\", e.target.value)\n                                }}/>\n                            </div>\n\n                            <div className=\"col-6\">\n                                <p>Time remaining</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\" \n                                value = {values.timeTrackingRemaining} \n                                onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingRemaining:e.target.value\n                                    })\n                                    setFieldValue(\"timeTrackingRemaining\", e.target.value)\n                                }}/>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <p>Description</p>\n                <Editor\n                    name=\"description\"\n                    value = {values.description}\n                    init={{\n                        selector: 'textarea#myTextArea',\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={handleEditorChange}\n                />\n            </div>\n  \n        </div>\n    )\n}\nconst createTaskForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        let {arrProject,arrStatus, arrTaskType, arrPriority} = props; \n\n        if(arrProject.length > 0) {\n            console.log(arrProject[0]?.id);\n            props.dispatch({\n                type: GET_USER_BY_PROJECT_ID_SAGA, \n                idProject : arrProject[0]?.id\n            })\n        }\n        return {\n            taskName: '',\n            description: '',\n            statusId: arrStatus[0]?.statusId,\n            originalEstimate: 0,\n            timeTrackingSpent:0,\n            timeTrackingRemaining:0,\n            projectId:arrProject[0]?.id,\n            typeId:arrTaskType[0]?.id,\n            priorityId:arrPriority[0]?.priorityId,\n            listUserAsign:[]\n        }\n    },\n    validationSchema: Yup.object().shape({\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n       props.dispatch({\n           type: \"CREATE_TASK_SAGA\",\n           taskObject: values\n       })\n    },\n})(FormCreateTask);\n\nconst mapStateToProps = (state) => ({ \n     arrProject : state.ProjectCyberBugsReducer.arrProject,\n     arrStatus : state.StatusReducer.arrStatus,\n     arrTaskType : state.TaskTypeReducer.arrTaskType,\n     arrPriority : state.PriorityReducer.arrPriority\n})\nexport default connect(mapStateToProps)(createTaskForm);\n\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/configStore.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/LoadingReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/UserCyberBugsReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectCyberBugsReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/PriorityReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/TaskTypeReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/ProjectEditReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/TaskReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/StatusReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/rootSaga.js",["360","361","362","363","364","365","366"],"import { takeEvery } from 'redux-saga/effects';\nimport {fork, take, call, takeLatest, put, all} from 'redux-saga/effects'; \nimport axios from 'axios';\n\nimport * as Cyberbugs from './Cyberbugs/UserCyberBugsSaga'; \n\nimport * as ProjectCategory from './Cyberbugs/ProjectCategorySaga'; \nimport * as ProjectSaga from './Cyberbugs/ProjectSaga'; \nimport * as TaskTypeSaga from './Cyberbugs/TaskTypeSaga'; \nimport * as PrioritySaga from './Cyberbugs/PrioritySaga'; \nimport * as TaskSaga from './Cyberbugs/TaskSaga'; \nimport * as StatusSaga from './Cyberbugs/StatusSaga'; \nimport * as CommentSaga from './Cyberbugs/CommentSaga'; \nimport * as SignUpSaga from './Cyberbugs/SignUpSaga'; \nexport function * rootSaga(){\n//    yield fork(getTaskAPI);  \n\nyield all([\n    Cyberbugs.theoDoiSignin(), \n\n    ProjectCategory.theoDoiGetAllCategory(),\n    ProjectSaga.theoDoiCreateProjectSaga(),\n    ProjectSaga.theoDoiGetListProjectSaga(),\n    ProjectSaga.theoDoiUpdateProjectSaga(),\n    ProjectSaga.theoDoiDeleteProjectSaga(), \n    ProjectSaga.theoDoiGetProjectDetailSaga(),\n    ProjectSaga.theoDoiGetAllProjectSaga(), \n\n    Cyberbugs.theoDoiGetUser(),\n    Cyberbugs.theoDoiAddUser(),\n    Cyberbugs.theoDoiGetUserByProjectId(),\n    Cyberbugs.theoDoiDeleteUserProject(),\n    Cyberbugs.theoDoiGetAllUserSaga(),\n    Cyberbugs.theoDoiDeleteUserFromListSaga(), \n    Cyberbugs.theoDoiEditUserInfoSaga(), \n    \n    TaskTypeSaga.theoDoiGetAllTypeTaskSaga(),\n    PrioritySaga.theoDoiGetAllPriorityList(),\n    TaskSaga.theoDoiCreateTaskSaga(),\n    TaskSaga.theoDoiGetTaskDetailSaga(),\n    TaskSaga.theoDoiUpdateTaskStatusSaga(), \n    TaskSaga.theoDoiHandleChangePostApi(), \n\n    StatusSaga.theoDoiGetAllStatusSaga(),\n\n    CommentSaga.theoDoiInsertACommentSaga(),\n    CommentSaga.theoDoiGetAllCommentSaga(),\n    CommentSaga.theoDoiEditACommentSaga(),\n    CommentSaga.theoDoiDeleteACommentSaga(),\n\n    SignUpSaga.theoDoiUserSignUpSaga()\n\n\n])\n\n\n} ","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/util/constants/settingSystem.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/ProjectSaga.js",["367","368","369","370"],"import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from '../../services/CyberbugsService'; \nimport { STATUSCODE } from \"../../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/Loading/LoadingConst\";\n\nimport { projectService } from \"../../services/ProjectService\";\nimport { openNotificationWithIcon } from \"../../../util/Notification/notificationCyberbugs\";\nimport { history } from \"../../../util/history/history\";\nimport { GET_ALL_PROJECT_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\nfunction* createProjectSaga(action) {\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay (500);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.createProjectAuthorization(action.newProject));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            console.log(status)\n            history.push('/projectmanagement');     \n        }\n    } catch (err) {\n        console.log(err.response.data);\n    // }  \n    yield put({\n        type: HIDE_LOADING\n    })\n}\n}\n\n\nexport function* theoDoiCreateProjectSaga() {\n    yield takeLatest('CREATE_PROJECT_SAGA', createProjectSaga);\n}\n\n//Saga dùng để get all project từ api \n//Khải - Code ngày dd/MM/yyyy\n\nfunction *getListProjectSaga(action) { \n    try {\n        const {data,status} = yield call( () => cyberbugsService.getListProject());\n \n        //Sau khi lấy dữ liệu từ api về thành công\n        if(status == STATUSCODE.SUCCESS) {\n            yield put({\n                type:'GET_ALL_PROJECT_LIST',\n                projectList:data.content\n            })\n        }\n    }catch(err) {\n        console.log(err)\n    }\n\n}\n\n\nexport function* theoDoiGetListProjectSaga() {\n    yield takeLatest('GET_LIST_PROJECT_SAGA', getListProjectSaga);\n}\n\nfunction * updateProjectSaga(action){\n   console.log(action.projectUpdate);\nyield put({\n    type: DISPLAY_LOADING\n}); \n\nyield delay (600);\ntry {\n\n    //Gọi api lấy dữ liệu về\n    const { data, status } = yield call(() => cyberbugsService.updateProject(action.projectUpdate));\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n  \n    yield put ({\n        type: \"GET_LIST_PROJECT_SAGA\"\n    })\n    yield put({\n        type: \"CLOSE_DRAWER\"\n    })\n} catch (err) {\n    console.log(err.response.data);\n}\n\nyield put({\n    type: HIDE_LOADING\n})\n}\n//update project \nexport function* theoDoiUpdateProjectSaga(){\n    yield takeLatest(\"UPDATE_PROJECT_SAGA\", updateProjectSaga); \n}\nfunction * deleteProjectSaga (action){\n    yield put({\n        type: DISPLAY_LOADING\n    }); \n    \n    yield delay (500);  \n    try {  \n        \n        //Gọi api lấy dữ liệu về\n        const { status } = yield call(() => projectService.deleteProject(action.id)); \n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            openNotificationWithIcon('success', 'Delete', 'Xoá Dự Án Thành Công !!')\n   \n    \n        }\n        yield put ({\n            type: \"GET_LIST_PROJECT_SAGA\"\n        })\n    } catch (err) {\n        openNotificationWithIcon('error', 'Error', 'Xảy ra lỗi khi xoá !!')\n        console.log(err.response.data);\n    }\n    \n    yield put({\n        type: HIDE_LOADING\n    })\n}\nexport function* theoDoiDeleteProjectSaga(){\n    yield takeLatest(\"DELETE_PROJECT_SAGA\", deleteProjectSaga); \n}\n\nfunction * getProjectDetailSaga (action){\n    yield put({\n        type: DISPLAY_LOADING\n    }); \n    \n    yield delay (500);  \n    try {     \n        //Gọi api lấy dữ liệu về\n        const { status , data} = yield call(() => projectService.getProjectDetail(action.id)); \n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n \n            openNotificationWithIcon('success', 'Get Project Detail', 'Lấy Dự Án Thành Công !!')\n            yield put ({\n                type: \"PUT_PROJECT_DETAIL\", \n                projectDetail : data.content\n            })\n        }\n      \n    } catch (err) {\n        openNotificationWithIcon('error', 'Error', 'Xảy ra lỗi khi cập nhật !!')\n        console.log(err.response.data);\n    } \n    yield put({\n        type: HIDE_LOADING\n    })\n}\nexport function* theoDoiGetProjectDetailSaga(){\n    yield takeLatest(\"GET_PROJECT_DETAIL_SAGA\", getProjectDetailSaga); \n}\n\nfunction * getAllProjectSaga (action){\n    yield put({\n        type: DISPLAY_LOADING\n    }); \n    \n    yield delay (500);  \n    try {     \n        //Gọi api lấy dữ liệu về\n        const { status , data} = yield call(() => projectService.getAllProject()); \n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {  \n            \n            yield put ({\n                type: \"GET_ALL_PROJECT_DROPDOWN_LIST\", \n                arrProject : data.content\n            })\n           \n        }\n      \n    } catch (err) {\n        console.log(err.response.data);\n    } \n    yield put({\n        type: HIDE_LOADING\n    })\n}\nexport function* theoDoiGetAllProjectSaga(){\n    yield takeLatest(GET_ALL_PROJECT_SAGA, getAllProjectSaga); \n}\n\n\n\n\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/ProjectCategorySaga.js",["371","372","373","374","375","376"],"\nimport { takeEvery } from 'redux-saga/effects';\nimport {push} from 'react-router-redux'; \nimport { fork, take, call, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { cyberbugsService } from '../../services/CyberbugsService'; \nimport { STATUSCODE } from '../../../util/constants/settingSystem';\nimport { GET_ALL_PROJECT, GET_ALL_PROJECT_CATEGORY_SAGA } from '../../constants/Cyberbugs/Cyberbugs';\n\nfunction * getAllProjectCategorySaga(action){\n    try {\n        let {data, status} = yield call(()=> cyberbugsService.getAllProjectCategory()); \n        if(status === STATUSCODE.SUCCESS){\n          yield put({\n              type: GET_ALL_PROJECT, \n              data: data.content\n          })\n        }; \n    } catch(error){\n        console.log(error);\n    }\n\n}\nexport function * theoDoiGetAllCategory(){\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga)\n}","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/TaskTypeSaga.js",["377"],"import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { taskTypeService } from \"../../services/TaskTypeService\";\nimport { STATUSCODE } from \"../../../util/constants/settingSystem\";\nimport { GET_ALL_TASK_TYPE, GET_ALL_TYPE_TASK_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\nfunction* getAllTypeTaskSaga(action) {\n    //HIỂN THỊ LOADING\n    try {\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => taskTypeService.getAllTaskType());\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            yield put({\n                type: GET_ALL_TASK_TYPE, \n                arrTaskType : data.content\n            })\n        }\n    } catch (err) {\n        console.log(err.response.data);}\n}\n\n\nexport function* theoDoiGetAllTypeTaskSaga() {\n    yield takeLatest(GET_ALL_TYPE_TASK_SAGA, getAllTypeTaskSaga);\n}","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/PrioritySaga.js",["378"],"import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { priorityService } from \"../../services/PriorityService\";\n\nimport { STATUSCODE } from \"../../../util/constants/settingSystem\";\nimport { GET_ALL_PRIORITY_DROPDOWN, GET_ALL_PRIORITY_LIST_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\n\nfunction* getAllPriorityList(action) {\n    //HIỂN THỊ LOADING\n    try {\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => priorityService.getAllPriorityList());\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            yield put({\n                type: GET_ALL_PRIORITY_DROPDOWN, \n                arrPriority : data.content\n            })\n        }\n    } catch (err) {\n        console.log(err.response.data);}\n}\n\n\nexport function* theoDoiGetAllPriorityList() {\n    yield takeLatest(GET_ALL_PRIORITY_LIST_SAGA, getAllPriorityList);\n}","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/TaskSaga.js",["379","380","381","382","383","384","385"],"import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from '../../services/CyberbugsService'; \nimport { STATUSCODE } from \"../../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/Loading/LoadingConst';\nimport { openNotificationWithIcon } from \"../../../util/Notification/notificationCyberbugs\";\nimport { history } from \"../../../util/history/history\";\nimport { GET_ALL_PROJECT_SAGA, UPDATE_TASK_SAGA, HANDLE_CHANGE_POST_API, CHANGE_TASK_MODAL, CHANGE_ASSINGEES, REMOVE_USER_ASSIGN } from \"../../constants/Cyberbugs/Cyberbugs\";\nimport { taskService } from \"../../services/TaskService\";\nimport { select } from \"redux-saga/effects\";\n\n\nfunction * createTaskSaga (action){\n    console.log(action);\n    yield put({\n        type: DISPLAY_LOADING\n    }); \n    \n    yield delay (500);  \n    try {     \n        //Gọi api lấy dữ liệu về\n        const {data,status} = yield call(() => taskService.createTask(action.taskObject)); \n        console.log(status)\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n           console.log(status);\n            openNotificationWithIcon('success', 'Get Project Detail', 'Create Task Successfully !!')\n            // yield put ({\n            //     type: \"CREATE_TASK\", \n            //     taskObject : data.content\n            // })\n        }\n      \n    } catch (err) {\n        openNotificationWithIcon('error', 'Error', 'Error when creating task !!')\n        console.log(err.response.data);\n    } \n    yield put({\n        type: \"CLOSE_DRAWER\"\n    })\n    yield put({\n        type: HIDE_LOADING\n    })\n}\nexport function* theoDoiCreateTaskSaga(){\n    yield takeLatest(\"CREATE_TASK_SAGA\", createTaskSaga); \n}\n\nfunction * getTaskDetailSaga (action){\n    try {     \n        //Gọi api lấy dữ liệu về\n        yield delay(600)\n        const {data,status} = yield call(() => taskService.getTaskDetail(action.taskId)); \n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            yield put ({\n                type : \"GET_TASK_DETAIL_REDUCER\", \n                taskDetailModal: data.content\n            })\n        }\n    } catch (err) {\n        console.log(err.response.data);\n    } \n}\nexport function* theoDoiGetTaskDetailSaga(){\n    yield takeLatest(\"GET_TASK_DETAIL_SAGA\", getTaskDetailSaga); \n}\n\nfunction * updateTaskStatusSaga (action){\n    console.log(\"action\", action)\n    try {     \n        //Gọi api lấy dữ liệu về\n        const {data,status} = yield call(() => taskService.updateStatusTask(action.taskStatusUpdate));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            yield put ({\n                type : \"GET_PROJECT_DETAIL_SAGA\", \n                id : action.taskStatusUpdate.id\n            })\n            yield put ({\n                type : \"GET_TASK_DETAIL_SAGA\", \n                taskId : action.taskStatusUpdate.taskId\n            })\n        }\n    } catch (err) {\n        console.log(err.response.data);\n    } \n}\nexport function* theoDoiUpdateTaskStatusSaga(){\n    yield takeLatest(\"UPDATE_TASK_STATUS_SAGA\", updateTaskStatusSaga); \n}\n\nfunction * handleChangePostApi(action) {\n\n//gọi action làm thay đổi taskDetail modal \nswitch(action.actionType) {\n    case CHANGE_TASK_MODAL: {\n        let {name, value} = action; \n        yield put ({\n            type: CHANGE_TASK_MODAL, \n            name, \n            value\n        })\n    }\n    break; \n    case CHANGE_ASSINGEES: {\n        const { userSelect } = action;\n        yield put({\n            type: CHANGE_ASSINGEES,\n            userSelect\n        })\n\n    };\n    break;\n    // case CHANGE_ASSINGEES: { \n    //     let {userSelect} = action; \n    //     console.log(\"userSelect\", userSelect);\n    //     yield put ({\n    //         type: CHANGE_ASSINGEES, \n    //         userSelect\n    //     })\n    // }\n    // break; \n    case REMOVE_USER_ASSIGN : {\n        let {userId} = action; \n        yield put ({\n            type : REMOVE_USER_ASSIGN,\n            userId \n        })\n    } \n    break; \n    default : \n    console.log(\"abc\");\n\n}\n//Save qua api updateTaskSaga \n//lấy dữ liệu từ state.taskDetailModal \nlet {taskDetailModal} = yield select(state => state.TaskReducer); \nconsole.log(\"taskDetailModal sau khi thay đỗi\",  taskDetailModal);\n//biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần \nconst listUserAsign = taskDetailModal.assigness?.map((user, index) => {\n    return user.id\n})\nconst taskUpdateApi= {...taskDetailModal, listUserAsign}; \ntry {\n    const {data, status} = yield call(() => taskService.updateTask(taskUpdateApi))\n    if(status === STATUSCODE.SUCCESS){\n        \n\n        yield put ({\n            type : \"GET_PROJECT_DETAIL_SAGA\", \n            id : taskUpdateApi.projectId\n        })\n        yield put ({\n            type : \"GET_TASK_DETAIL_SAGA\", \n            taskId : taskUpdateApi.taskId\n        })\n    }\n} catch(error){\n    console.log(error.response?.data)\n}\n\n}\n\nexport function *theoDoiHandleChangePostApi(action) {\n    yield takeLatest(HANDLE_CHANGE_POST_API, handleChangePostApi)\n}\n\n\n\n\n\n\n\n\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/StatusSaga.js",["386"],"import { call, delay, put, takeLatest } from \"redux-saga/effects\";\n\nimport { STATUSCODE } from \"../../../util/constants/settingSystem\";\n\nimport { statusService } from \"../../services/StatusService\";\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\n\nfunction * getAllStatus (action){\n    try {     \n        //Gọi api lấy dữ liệu về\n        const {data,status} = yield call(() => statusService.getAllStatus()); \n\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n    \n       \n            yield put ({\n                type: GET_ALL_STATUS, \n                arrStatus : data.content\n            })\n        }\n      \n    } catch (err) {\n      \n        console.log(err.response.data);\n    } \n   \n}\nexport function* theoDoiGetAllStatusSaga(){\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatus); \n}\n\n\n\n\n\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/UserCyberBugsSaga.js",["387","388","389","390","391","392","393"],"\nimport { takeEvery } from 'redux-saga/effects';\n\nimport { fork, take, call, takeLatest , put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {ADD_USER_PROJECT_API, CLOSE_DRAWER, DELETE_USER_PROJECT_API, GET_LIST_PROJECT_SAGA, GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA, USER_SIGNIN_API, USLOGIN} from './../../constants/Cyberbugs/Cyberbugs'; \nimport { cyberbugsService } from '../../services/CyberbugsService'; \nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/Loading/LoadingConst';\nimport { STATUSCODE, TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem';\nimport {history} from '../../../util/history/history';\nimport { userService } from '../../services/UserService';\nimport { openNotificationWithIcon } from '../../../util/Notification/notificationCyberbugs';\n//Quản lý các action saga\n\nfunction * signinSaga(action){\n    yield delay (1000); \n    yield put({\n        type: DISPLAY_LOADING\n    });\n//gọi api \ntry {\n  const {data, status} = yield cyberbugsService.signinCyberBugs(action.userLogin) ; \n  //lưu vào local store khi đăng nhập sucessfull\n  localStorage.setItem(TOKEN, data.content.accessToken); \n  localStorage.setItem(USER_LOGIN,JSON.stringify(data.content)); \n\n// action.userLogin.history.push(\"./home\");\n    yield put({\n        type: USLOGIN,\n        userLogin: data.content\n    })\nhistory.push(\"/projectmanagement\");\n\n} catch(err){\n    console.log(err.response.data)\n}\nyield put({\n    type: HIDE_LOADING\n});\n}\n\nexport function * theoDoiSignin(){\n    yield takeLatest(USER_SIGNIN_API, signinSaga); \n}\n function * getUserSaga(action){\n     \n     try {\n        const {data, status} = yield call(()=> userService.getUser(action.keyword)); \n\n        if(status === STATUSCODE.SUCCESS){\n\n            yield put({\n                type: \"GET_USER_SEARCH\", \n                listUserSearch: data.content\n            })\n        }\n     }  catch(error){\n        console.log(error);\n     }\n }\nexport function * theoDoiGetUser(){\n    yield takeLatest(\"GET_USER_API\", getUserSaga)\n}\nfunction * addUserProject(action){\n    try {\n        const {data, status} = yield call(()=> userService.assignUserProject(action.userProject)); \n        console.log(data);\n        if(status === STATUSCODE.SUCCESS){\n           yield put ({\n            type: GET_LIST_PROJECT_SAGA\n        })\n        }\n     }  catch(error){\n        console.log(error);\n     }\n}\nexport function * theoDoiAddUser(){\n    yield takeLatest(ADD_USER_PROJECT_API, addUserProject)\n}\n\nfunction * deleteUserProject(action){\n    console.log(action);\n    try {\n        const {data, status} = yield call(()=> userService.deleteUserFromProject(action.userProject)) ; \n        console.log(data);\n        if(status === STATUSCODE.SUCCESS){\n           yield put ({\n            type: GET_LIST_PROJECT_SAGA\n        })\n        }\n     }  catch(error){\n        console.log(error.response.data);\n     }\n}\nexport function * theoDoiDeleteUserProject(){\n    yield takeLatest(DELETE_USER_PROJECT_API, deleteUserProject)\n}\n\n\nfunction * getUserByProjectID(action){\n    console.log(action);\n    try {\n        const {data, status} = yield call(()=> userService.getUserByProjectId(action.idProject)) ; \n       \n        if(status === STATUSCODE.SUCCESS){\n           yield put ({\n            type: GET_USER_BY_PROJECT_ID, \n            arrUser : data.content\n        })\n        }\n     }  catch(error){\n        console.log(error.response.data);\n     }\n}\nexport function * theoDoiGetUserByProjectId(){\n    yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectID)\n}\n\nfunction * getAllUserSaga(action){  \n\n\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(1000)\n    try {\n        const {data, status} = yield call(()=> userService.getUser(action.keyword)) ; \n       \n        if(status === STATUSCODE.SUCCESS){\n           yield put ({\n            type: \"GET_ALL_USER_REDUCER\", \n            arrAllUser : data.content\n        })\n        }\n     }  catch(error){\n        console.log(error.response.data);\n     }\n     yield put ({\n         type: HIDE_LOADING\n     })\n}\n\nexport function * theoDoiGetAllUserSaga(){\n    yield takeLatest(\"GET_ALL_USERS_SAGA\", getAllUserSaga)\n}\n\n\n\nfunction * deleteUserFromListSaga(action){  \n   yield put({\n       type: DISPLAY_LOADING\n   })\n   yield delay(600)\n    try {\n        const {data, status} = yield call(()=> userService.deleteUserById(action.userId)) ; \n        if(status === STATUSCODE.SUCCESS){\n           yield put ({\n            type: \"GET_ALL_USERS_SAGA\", \n        })\n        openNotificationWithIcon(\"success\", \"Delete User\", \"Delete User From List Successfully !!! \")\n        }\n     }  catch(error){\n        openNotificationWithIcon(\"warning\", \"Delete User\", \"Delete User From List Failed !!! \")\n        console.log(error.response.data);\n     }\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\nexport function * theoDoiDeleteUserFromListSaga(){\n    yield takeLatest(\"DELETE_USER_FROM_LIST_SAGA\",deleteUserFromListSaga)\n}\n\n\nfunction * editUserInfoSaga(action){  \n    console.log(\"action\", action);\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(600)\n     try {\n         const {data, status} = yield call(()=> userService.editUserInfo(action.userInfo)) ; \n         if(status === STATUSCODE.SUCCESS){\n            yield put ({\n             type: \"GET_ALL_USERS_SAGA\", \n         })\n         openNotificationWithIcon(\"success\", \"Edit User\", \"Edit User Info Successfully !!! \")\n         }\n      }  catch(error){\n         openNotificationWithIcon(\"warning\", \"Edit User\", \"Edit User Info List Failed !!! \")\n         console.log(error.response.data);\n      }\n      yield put({\n          type:CLOSE_DRAWER\n      })\n\n     yield put({\n         type: HIDE_LOADING\n     })\n    \n }\nexport function * theoDoiEditUserInfoSaga(){\n    yield takeLatest(\"EDIT_USER_INFO_SAGA\",editUserInfoSaga)\n}\n\n\n","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/util/Notification/notificationCyberbugs.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/CyberbugsService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/PriorityService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/BaseService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/ProjectService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/TaskService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/StatusService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/TaskTypeService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/UserService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/constants/Loading/LoadingConst.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/serviceWorker.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/CommentSaga.js",["394"],"import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { STATUSCODE } from \"../../../util/constants/settingSystem\";\nimport { openNotificationWithIcon } from \"../../../util/Notification/notificationCyberbugs\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/Loading/LoadingConst\";\nimport { commentService } from \"../../services/CommentService\";\n\n\nfunction * getAllCommentSaga (action) {\n\n    yield delay(1500); \n    try{\n        const {data, status} = yield call(() => commentService.getAllComment(action.taskId));\n        if(status === STATUSCODE.SUCCESS){\n           \n            yield put ({\n                type: \"GET_ALL_COMMENTS_REDUCER\", \n                arrComment : data.content\n            })\n\n        }\n    }catch(error) {\n        console.log(error.response);\n    }\n}\nexport function* theoDoiGetAllCommentSaga() {\n    yield takeLatest(\"GET_ALL_COMMENTS_SAGA\", getAllCommentSaga);\n}\n\n\nfunction* insertACommentSaga(action) {\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(1200)\n    try {\n        //Gọi api lấy dữ liệu về     \n        const { data, status } = yield call(() => commentService.insertComment(action.comment));      \n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            yield put({\n\n                type: \"GET_ALL_COMMENTS_SAGA\", \n                taskId : action.comment.taskId\n            })\n          \n            yield put ({\n                type : \"GET_TASK_DETAIL_SAGA\", \n                taskId : action.comment.taskId\n            })\n            yield put ({\n                type : \"GET_PROJECT_DETAIL_SAGA\", \n                id : action.comment.projectId\n            })\n            \n        }\n    } catch (err) {\n        console.log(err.response.data);\n    }\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\nexport function* theoDoiInsertACommentSaga() {\n    yield takeLatest(\"INSERT_A_COMMENT_SAGA\", insertACommentSaga);\n}\nfunction* editACommentSaga(action) {\n    let {taskId, id, contentComment, projectId} = action; \n    console.log(action);\n\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(1200)\n    try {\n        //Gọi api lấy dữ liệu về     \n        const { data, status } = yield call(() => commentService.editComment(id, contentComment));  \n        console.log(status);\n        console.log(data)    \n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUSCODE.SUCCESS) {\n            \n            openNotificationWithIcon(\"success\", \"Edit Comment\", \"Edit comment successfully !!!\")\n            yield put({\n\n                type: \"GET_ALL_COMMENTS_SAGA\", \n                taskId\n            })\n            yield put ({\n                type : \"GET_TASK_DETAIL_SAGA\", \n                taskId : taskId\n            })\n            yield put ({\n                type : \"GET_PROJECT_DETAIL_SAGA\", \n                id : projectId\n            }) \n        }\n    } catch (err) {\n        openNotificationWithIcon(\"warning\", \"Edit Comment\", \"Edit comment failed !!!\")\n        console.log(err.response.data);\n    }\n    yield put ({\n        type: \"CANCEL_EDIT_COMMENT\", \n        idComment : id\n    })\n    yield put({\n        type: HIDE_LOADING\n    })\n}\nexport function* theoDoiEditACommentSaga(action) {\n    yield takeLatest(\"EDIT_A_COMMENT_SAGA\", editACommentSaga);\n}\n\n function* deleteACommentSaga(action) {\n    let {id, taskId, projectId} = action; \n   \n    yield call(() => commentService.deleteComment(id)); \n    yield delay(1500)\n\n//    try{\n//     const { data, status } = yield call(() => commentService.deleteComment(id));    \n\n//     if(status === STATUSCODE.SUCCESS){\n//         console.log(status)\n        yield put({\n            type: \"GET_ALL_COMMENTS_SAGA\", \n            taskId\n        })\n      \n        yield put ({\n            type : \"GET_TASK_DETAIL_SAGA\", \n            taskId\n        })\n        yield put ({\n            type : \"GET_PROJECT_DETAIL_SAGA\", \n            id : projectId\n        })\n//     }\n//    } catch(error) {\n//     console.log(error);\n//    }\n//    yield put({\n//     type: HIDE_LOADING\n// })\n}\nexport function* theoDoiDeleteACommentSaga(action) {\n    yield takeLatest(\"DELETE_A_COMMENT_SAGA\", deleteACommentSaga);\n}","/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/CommentService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/reducers/CommentReducer.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/SignupCyberBug/SignupCyberBug.js",["395","396","397","398"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/sagas/Cyberbugs/SignUpSaga.js",["399","400"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/redux/services/SignUpService.js",[],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/pages/CyberBugs/UserManagement/UserManagement.js",["401","402"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormEditUser/FormEditUser.js",["403","404","405","406","407","408","409"],"/Users/thoanguyen/Library/Mobile Documents/com~apple~CloudDocs/Reactjs Cybersoft/jira-project/src/components/Form/FormCreateUser/FormCreateUser.js",["410","411","412","413","414","415","416","417"],{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","replacedBy":"421"},{"ruleId":"418","replacedBy":"422"},{"ruleId":"420","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"425","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":23},{"ruleId":"424","severity":1,"message":"428","line":4,"column":25,"nodeType":"426","messageId":"427","endLine":4,"endColumn":41},{"ruleId":"424","severity":1,"message":"429","line":4,"column":43,"nodeType":"426","messageId":"427","endLine":4,"endColumn":58},{"ruleId":"424","severity":1,"message":"430","line":7,"column":10,"nodeType":"426","messageId":"427","endLine":7,"endColumn":25},{"ruleId":"424","severity":1,"message":"431","line":12,"column":9,"nodeType":"426","messageId":"427","endLine":12,"endColumn":15},{"ruleId":"424","severity":1,"message":"432","line":13,"column":9,"nodeType":"426","messageId":"427","endLine":13,"endColumn":16},{"ruleId":"424","severity":1,"message":"433","line":16,"column":9,"nodeType":"426","messageId":"427","endLine":16,"endColumn":19},{"ruleId":"424","severity":1,"message":"431","line":11,"column":9,"nodeType":"426","messageId":"427","endLine":11,"endColumn":15},{"ruleId":"424","severity":1,"message":"432","line":12,"column":9,"nodeType":"426","messageId":"427","endLine":12,"endColumn":16},{"ruleId":"424","severity":1,"message":"434","line":13,"column":9,"nodeType":"426","messageId":"427","endLine":13,"endColumn":15},{"ruleId":"424","severity":1,"message":"433","line":15,"column":9,"nodeType":"426","messageId":"427","endLine":15,"endColumn":19},{"ruleId":"435","severity":1,"message":"436","line":24,"column":10,"nodeType":"437","endLine":24,"endColumn":12,"suggestions":"438"},{"ruleId":"439","severity":1,"message":"440","line":56,"column":66,"nodeType":"441","messageId":"442","endLine":56,"endColumn":67,"suggestions":"443"},{"ruleId":"439","severity":1,"message":"440","line":56,"column":116,"nodeType":"441","messageId":"442","endLine":56,"endColumn":117,"suggestions":"444"},{"ruleId":"424","severity":1,"message":"445","line":2,"column":9,"nodeType":"426","messageId":"427","endLine":2,"endColumn":20},{"ruleId":"424","severity":1,"message":"446","line":3,"column":18,"nodeType":"426","messageId":"427","endLine":3,"endColumn":23},{"ruleId":"424","severity":1,"message":"447","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":23},{"ruleId":"424","severity":1,"message":"448","line":5,"column":40,"nodeType":"426","messageId":"427","endLine":5,"endColumn":59},{"ruleId":"435","severity":1,"message":"436","line":25,"column":8,"nodeType":"437","endLine":25,"endColumn":10,"suggestions":"449"},{"ruleId":"424","severity":1,"message":"450","line":53,"column":18,"nodeType":"426","messageId":"427","endLine":53,"endColumn":28},{"ruleId":"424","severity":1,"message":"451","line":54,"column":20,"nodeType":"426","messageId":"427","endLine":54,"endColumn":32},{"ruleId":"424","severity":1,"message":"452","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":16},{"ruleId":"424","severity":1,"message":"453","line":4,"column":9,"nodeType":"426","messageId":"427","endLine":4,"endColumn":15},{"ruleId":"424","severity":1,"message":"454","line":4,"column":17,"nodeType":"426","messageId":"427","endLine":4,"endColumn":23},{"ruleId":"424","severity":1,"message":"455","line":1,"column":28,"nodeType":"426","messageId":"427","endLine":1,"endColumn":36},{"ruleId":"435","severity":1,"message":"456","line":18,"column":8,"nodeType":"437","endLine":18,"endColumn":10,"suggestions":"457"},{"ruleId":"424","severity":1,"message":"458","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":18},{"ruleId":"424","severity":1,"message":"459","line":8,"column":8,"nodeType":"426","messageId":"427","endLine":8,"endColumn":19},{"ruleId":"424","severity":1,"message":"460","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":17},{"ruleId":"424","severity":1,"message":"455","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":25},{"ruleId":"424","severity":1,"message":"461","line":2,"column":18,"nodeType":"426","messageId":"427","endLine":2,"endColumn":22},{"ruleId":"424","severity":1,"message":"462","line":2,"column":32,"nodeType":"426","messageId":"427","endLine":2,"endColumn":35},{"ruleId":"424","severity":1,"message":"463","line":2,"column":37,"nodeType":"426","messageId":"427","endLine":2,"endColumn":40},{"ruleId":"424","severity":1,"message":"464","line":2,"column":42,"nodeType":"426","messageId":"427","endLine":2,"endColumn":47},{"ruleId":"424","severity":1,"message":"465","line":2,"column":49,"nodeType":"426","messageId":"427","endLine":2,"endColumn":55},{"ruleId":"424","severity":1,"message":"466","line":2,"column":57,"nodeType":"426","messageId":"427","endLine":2,"endColumn":67},{"ruleId":"424","severity":1,"message":"467","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":30},{"ruleId":"424","severity":1,"message":"468","line":15,"column":9,"nodeType":"426","messageId":"427","endLine":15,"endColumn":19},{"ruleId":"424","severity":1,"message":"461","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":14},{"ruleId":"424","severity":1,"message":"469","line":4,"column":5,"nodeType":"426","messageId":"427","endLine":4,"endColumn":23},{"ruleId":"424","severity":1,"message":"470","line":5,"column":5,"nodeType":"426","messageId":"427","endLine":5,"endColumn":21},{"ruleId":"424","severity":1,"message":"471","line":6,"column":5,"nodeType":"426","messageId":"427","endLine":6,"endColumn":17},{"ruleId":"424","severity":1,"message":"472","line":7,"column":5,"nodeType":"426","messageId":"427","endLine":7,"endColumn":24},{"ruleId":"424","severity":1,"message":"473","line":8,"column":5,"nodeType":"426","messageId":"427","endLine":8,"endColumn":19},{"ruleId":"424","severity":1,"message":"453","line":16,"column":9,"nodeType":"426","messageId":"427","endLine":16,"endColumn":15},{"ruleId":"424","severity":1,"message":"474","line":16,"column":24,"nodeType":"426","messageId":"427","endLine":16,"endColumn":31},{"ruleId":"424","severity":1,"message":"475","line":2,"column":19,"nodeType":"426","messageId":"427","endLine":2,"endColumn":24},{"ruleId":"424","severity":1,"message":"476","line":2,"column":26,"nodeType":"426","messageId":"427","endLine":2,"endColumn":32},{"ruleId":"424","severity":1,"message":"477","line":2,"column":33,"nodeType":"426","messageId":"427","endLine":2,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":3,"column":23,"nodeType":"426","messageId":"427","endLine":3,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":30,"column":8,"nodeType":"437","endLine":30,"endColumn":32,"suggestions":"479"},{"ruleId":"480","severity":1,"message":"481","line":52,"column":29,"nodeType":"441","messageId":"482","endLine":54,"endColumn":82},{"ruleId":"480","severity":1,"message":"481","line":225,"column":29,"nodeType":"441","messageId":"482","endLine":227,"endColumn":82},{"ruleId":"480","severity":1,"message":"481","line":287,"column":29,"nodeType":"441","messageId":"482","endLine":289,"endColumn":82},{"ruleId":"483","severity":1,"message":"484","line":395,"column":122,"nodeType":"485","messageId":"486","endLine":395,"endColumn":124},{"ruleId":"483","severity":1,"message":"484","line":408,"column":119,"nodeType":"485","messageId":"486","endLine":408,"endColumn":121},{"ruleId":"424","severity":1,"message":"487","line":1,"column":8,"nodeType":"426","messageId":"427","endLine":1,"endColumn":13},{"ruleId":"424","severity":1,"message":"488","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":30},{"ruleId":"424","severity":1,"message":"432","line":13,"column":9,"nodeType":"426","messageId":"427","endLine":13,"endColumn":16},{"ruleId":"424","severity":1,"message":"434","line":14,"column":9,"nodeType":"426","messageId":"427","endLine":14,"endColumn":15},{"ruleId":"424","severity":1,"message":"433","line":16,"column":9,"nodeType":"426","messageId":"427","endLine":16,"endColumn":19},{"ruleId":"424","severity":1,"message":"489","line":18,"column":9,"nodeType":"426","messageId":"427","endLine":18,"endColumn":18},{"ruleId":"435","severity":1,"message":"490","line":31,"column":8,"nodeType":"437","endLine":31,"endColumn":10,"suggestions":"491"},{"ruleId":"480","severity":1,"message":"481","line":88,"column":37,"nodeType":"441","messageId":"482","endLine":90,"endColumn":62},{"ruleId":"424","severity":1,"message":"492","line":6,"column":18,"nodeType":"426","messageId":"427","endLine":6,"endColumn":23},{"ruleId":"424","severity":1,"message":"432","line":21,"column":9,"nodeType":"426","messageId":"427","endLine":21,"endColumn":16},{"ruleId":"424","severity":1,"message":"434","line":22,"column":9,"nodeType":"426","messageId":"427","endLine":22,"endColumn":15},{"ruleId":"424","severity":1,"message":"433","line":24,"column":9,"nodeType":"426","messageId":"427","endLine":24,"endColumn":19},{"ruleId":"424","severity":1,"message":"489","line":26,"column":9,"nodeType":"426","messageId":"427","endLine":26,"endColumn":18},{"ruleId":"424","severity":1,"message":"493","line":41,"column":18,"nodeType":"426","messageId":"427","endLine":41,"endColumn":25},{"ruleId":"435","severity":1,"message":"490","line":61,"column":7,"nodeType":"437","endLine":61,"endColumn":9,"suggestions":"494"},{"ruleId":"480","severity":1,"message":"481","line":217,"column":29,"nodeType":"441","messageId":"482","endLine":219,"endColumn":82},{"ruleId":"424","severity":1,"message":"495","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":19},{"ruleId":"424","severity":1,"message":"496","line":2,"column":9,"nodeType":"426","messageId":"427","endLine":2,"endColumn":13},{"ruleId":"424","severity":1,"message":"497","line":2,"column":15,"nodeType":"426","messageId":"427","endLine":2,"endColumn":19},{"ruleId":"424","severity":1,"message":"498","line":2,"column":21,"nodeType":"426","messageId":"427","endLine":2,"endColumn":25},{"ruleId":"424","severity":1,"message":"499","line":2,"column":27,"nodeType":"426","messageId":"427","endLine":2,"endColumn":37},{"ruleId":"424","severity":1,"message":"500","line":2,"column":39,"nodeType":"426","messageId":"427","endLine":2,"endColumn":42},{"ruleId":"424","severity":1,"message":"487","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":13},{"ruleId":"424","severity":1,"message":"501","line":20,"column":17,"nodeType":"426","messageId":"427","endLine":20,"endColumn":21},{"ruleId":"483","severity":1,"message":"484","line":48,"column":19,"nodeType":"485","messageId":"486","endLine":48,"endColumn":21},{"ruleId":"424","severity":1,"message":"501","line":75,"column":13,"nodeType":"426","messageId":"427","endLine":75,"endColumn":17},{"ruleId":"424","severity":1,"message":"502","line":75,"column":19,"nodeType":"426","messageId":"427","endLine":75,"endColumn":25},{"ruleId":"424","severity":1,"message":"495","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":19},{"ruleId":"424","severity":1,"message":"503","line":3,"column":9,"nodeType":"426","messageId":"427","endLine":3,"endColumn":13},{"ruleId":"424","severity":1,"message":"496","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":14},{"ruleId":"424","severity":1,"message":"497","line":4,"column":16,"nodeType":"426","messageId":"427","endLine":4,"endColumn":20},{"ruleId":"424","severity":1,"message":"504","line":4,"column":45,"nodeType":"426","messageId":"427","endLine":4,"endColumn":50},{"ruleId":"424","severity":1,"message":"487","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":13},{"ruleId":"424","severity":1,"message":"504","line":1,"column":16,"nodeType":"426","messageId":"427","endLine":1,"endColumn":21},{"ruleId":"424","severity":1,"message":"504","line":1,"column":16,"nodeType":"426","messageId":"427","endLine":1,"endColumn":21},{"ruleId":"424","severity":1,"message":"505","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":26},{"ruleId":"424","severity":1,"message":"506","line":6,"column":10,"nodeType":"426","messageId":"427","endLine":6,"endColumn":17},{"ruleId":"424","severity":1,"message":"507","line":7,"column":10,"nodeType":"426","messageId":"427","endLine":7,"endColumn":30},{"ruleId":"424","severity":1,"message":"508","line":7,"column":32,"nodeType":"426","messageId":"427","endLine":7,"endColumn":48},{"ruleId":"424","severity":1,"message":"501","line":21,"column":16,"nodeType":"426","messageId":"427","endLine":21,"endColumn":20},{"ruleId":"424","severity":1,"message":"501","line":72,"column":16,"nodeType":"426","messageId":"427","endLine":72,"endColumn":20},{"ruleId":"424","severity":1,"message":"501","line":145,"column":12,"nodeType":"426","messageId":"427","endLine":145,"endColumn":16},{"ruleId":"424","severity":1,"message":"504","line":1,"column":16,"nodeType":"426","messageId":"427","endLine":1,"endColumn":21},{"ruleId":"424","severity":1,"message":"495","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":19},{"ruleId":"424","severity":1,"message":"496","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":14},{"ruleId":"424","severity":1,"message":"497","line":4,"column":16,"nodeType":"426","messageId":"427","endLine":4,"endColumn":20},{"ruleId":"424","severity":1,"message":"487","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":13},{"ruleId":"424","severity":1,"message":"502","line":22,"column":16,"nodeType":"426","messageId":"427","endLine":22,"endColumn":22},{"ruleId":"424","severity":1,"message":"501","line":155,"column":16,"nodeType":"426","messageId":"427","endLine":155,"endColumn":20},{"ruleId":"424","severity":1,"message":"501","line":183,"column":17,"nodeType":"426","messageId":"427","endLine":183,"endColumn":21},{"ruleId":"424","severity":1,"message":"501","line":38,"column":17,"nodeType":"426","messageId":"427","endLine":38,"endColumn":21},{"ruleId":"424","severity":1,"message":"452","line":3,"column":17,"nodeType":"426","messageId":"427","endLine":3,"endColumn":23},{"ruleId":"424","severity":1,"message":"431","line":10,"column":9,"nodeType":"426","messageId":"427","endLine":10,"endColumn":15},{"ruleId":"424","severity":1,"message":"432","line":11,"column":9,"nodeType":"426","messageId":"427","endLine":11,"endColumn":16},{"ruleId":"424","severity":1,"message":"433","line":14,"column":9,"nodeType":"426","messageId":"427","endLine":14,"endColumn":19},{"ruleId":"424","severity":1,"message":"509","line":2,"column":25,"nodeType":"426","messageId":"427","endLine":2,"endColumn":38},{"ruleId":"424","severity":1,"message":"501","line":17,"column":17,"nodeType":"426","messageId":"427","endLine":17,"endColumn":21},{"ruleId":"424","severity":1,"message":"510","line":2,"column":17,"nodeType":"426","messageId":"427","endLine":2,"endColumn":20},{"ruleId":"435","severity":1,"message":"436","line":23,"column":8,"nodeType":"437","endLine":23,"endColumn":10,"suggestions":"511"},{"ruleId":"424","severity":1,"message":"512","line":7,"column":12,"nodeType":"426","messageId":"427","endLine":7,"endColumn":24},{"ruleId":"424","severity":1,"message":"432","line":13,"column":9,"nodeType":"426","messageId":"427","endLine":13,"endColumn":16},{"ruleId":"424","severity":1,"message":"434","line":14,"column":9,"nodeType":"426","messageId":"427","endLine":14,"endColumn":15},{"ruleId":"424","severity":1,"message":"433","line":16,"column":9,"nodeType":"426","messageId":"427","endLine":16,"endColumn":19},{"ruleId":"424","severity":1,"message":"489","line":18,"column":9,"nodeType":"426","messageId":"427","endLine":18,"endColumn":18},{"ruleId":"424","severity":1,"message":"513","line":19,"column":9,"nodeType":"426","messageId":"427","endLine":19,"endColumn":22},{"ruleId":"435","severity":1,"message":"490","line":24,"column":8,"nodeType":"437","endLine":24,"endColumn":10,"suggestions":"514"},{"ruleId":"424","severity":1,"message":"478","line":3,"column":20,"nodeType":"426","messageId":"427","endLine":3,"endColumn":31},{"ruleId":"424","severity":1,"message":"452","line":5,"column":17,"nodeType":"426","messageId":"427","endLine":5,"endColumn":23},{"ruleId":"424","severity":1,"message":"431","line":11,"column":9,"nodeType":"426","messageId":"427","endLine":11,"endColumn":15},{"ruleId":"424","severity":1,"message":"432","line":12,"column":9,"nodeType":"426","messageId":"427","endLine":12,"endColumn":16},{"ruleId":"424","severity":1,"message":"433","line":15,"column":9,"nodeType":"426","messageId":"427","endLine":15,"endColumn":19},{"ruleId":"424","severity":1,"message":"489","line":17,"column":9,"nodeType":"426","messageId":"427","endLine":17,"endColumn":18},{"ruleId":"424","severity":1,"message":"513","line":18,"column":9,"nodeType":"426","messageId":"427","endLine":18,"endColumn":22},{"ruleId":"435","severity":1,"message":"490","line":23,"column":8,"nodeType":"437","endLine":23,"endColumn":10,"suggestions":"515"},"no-native-reassign",["516"],"no-negated-in-lhs",["517"],["516"],["517"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'FacebookOutlined' is defined but never used.","'TwitterOutlined' is defined but never used.","'USER_SIGNIN_API' is defined but never used.","'values' is assigned a value but never used.","'touched' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["518"],"no-useless-escape","Unnecessary escape character: \\ .","Literal","unnecessaryEscape",["519","520"],["521","522"],"'useDispatch' is defined but never used.","'Image' is defined but never used.","'ReactHtmlParser' is defined but never used.","'CloseCircleOutlined' is defined but never used.",["523"],"'sortedInfo' is assigned a value but never used.","'filteredInfo' is assigned a value but never used.","'Button' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.projectId'. Either include them or remove the dependency array.",["524"],"'HeaderMain' is defined but never used.","'ContentMain' is defined but never used.","'InforMain' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'DatePicker' is defined but never used.","'DrawerCyberbugsReducer' is defined but never used.","'showDrawer' is assigned a value but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'Content' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'useSelector' is defined but never used.",["525"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","multilineString","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'ProjectCategoryReducer' is defined but never used.","'setValues' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'handleSubmit'. Either include them or remove the dependency array.",["526"],"'Radio' is defined but never used.","'setSize' is assigned a value but never used.",["527"],"'takeEvery' is defined but never used.","'fork' is defined but never used.","'take' is defined but never used.","'call' is defined but never used.","'takeLatest' is defined but never used.","'put' is defined but never used.","'data' is assigned a value but never used.","'status' is assigned a value but never used.","'push' is defined but never used.","'delay' is defined but never used.","'cyberbugsService' is defined but never used.","'history' is defined but never used.","'GET_ALL_PROJECT_SAGA' is defined but never used.","'UPDATE_TASK_SAGA' is defined but never used.","'SignUpService' is defined but never used.","'Tag' is defined but never used.",["528"],"'userEditInfo' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.",["529"],["530"],"no-global-assign","no-unsafe-negation",{"desc":"531","fix":"532"},{"messageId":"533","fix":"534","desc":"535"},{"messageId":"536","fix":"537","desc":"538"},{"messageId":"533","fix":"539","desc":"535"},{"messageId":"536","fix":"540","desc":"538"},{"desc":"531","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"546","fix":"548"},{"desc":"531","fix":"549"},{"desc":"546","fix":"550"},{"desc":"546","fix":"551"},"Update the dependencies array to be: [dispatch]",{"range":"552","text":"553"},"removeEscape",{"range":"554","text":"555"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"556","text":"557"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"558","text":"555"},{"range":"559","text":"557"},{"range":"560","text":"553"},"Update the dependencies array to be: [dispatch, props.match.params.projectId]",{"range":"561","text":"562"},"Update the dependencies array to be: [dispatch, taskDetailModal.taskId]",{"range":"563","text":"564"},"Update the dependencies array to be: [dispatch, handleSubmit]",{"range":"565","text":"566"},{"range":"567","text":"566"},{"range":"568","text":"553"},{"range":"569","text":"566"},{"range":"570","text":"566"},[767,769],"[dispatch]",[1940,1941],"",[1940,1940],"\\",[1990,1991],[1990,1990],[1277,1279],[786,788],"[dispatch, props.match.params.projectId]",[1624,1648],"[dispatch, taskDetailModal.taskId]",[875,877],"[dispatch, handleSubmit]",[2083,2085],[876,878],[623,625],[659,661]]